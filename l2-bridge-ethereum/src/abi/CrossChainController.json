{
  "abi": [
    { "type": "receive", "stateMutability": "payable" },
    {
      "type": "function",
      "name": "allowReceiverBridgeAdapters",
      "inputs": [
        {
          "name": "bridgeAdaptersInput",
          "type": "tuple[]",
          "internalType": "struct ICrossChainReceiver.ReceiverBridgeAdapterConfigInput[]",
          "components": [
            { "name": "bridgeAdapter", "type": "address", "internalType": "address" },
            { "name": "chainIds", "type": "uint256[]", "internalType": "uint256[]" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "approveSenders",
      "inputs": [{ "name": "senders", "type": "address[]", "internalType": "address[]" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "deliverEnvelope",
      "inputs": [
        {
          "name": "envelope",
          "type": "tuple",
          "internalType": "struct Envelope",
          "components": [
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "origin", "type": "address", "internalType": "address" },
            { "name": "destination", "type": "address", "internalType": "address" },
            { "name": "originChainId", "type": "uint256", "internalType": "uint256" },
            { "name": "destinationChainId", "type": "uint256", "internalType": "uint256" },
            { "name": "message", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "disableBridgeAdapters",
      "inputs": [
        {
          "name": "bridgeAdapters",
          "type": "tuple[]",
          "internalType": "struct ICrossChainForwarder.BridgeAdapterToDisable[]",
          "components": [
            { "name": "bridgeAdapter", "type": "address", "internalType": "address" },
            { "name": "chainIds", "type": "uint256[]", "internalType": "uint256[]" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "disallowReceiverBridgeAdapters",
      "inputs": [
        {
          "name": "bridgeAdapters",
          "type": "tuple[]",
          "internalType": "struct ICrossChainReceiver.ReceiverBridgeAdapterConfigInput[]",
          "components": [
            { "name": "bridgeAdapter", "type": "address", "internalType": "address" },
            { "name": "chainIds", "type": "uint256[]", "internalType": "uint256[]" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "emergencyEtherTransfer",
      "inputs": [
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "emergencyTokenTransfer",
      "inputs": [
        { "name": "erc20Token", "type": "address", "internalType": "address" },
        { "name": "to", "type": "address", "internalType": "address" },
        { "name": "amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "enableBridgeAdapters",
      "inputs": [
        {
          "name": "bridgeAdapters",
          "type": "tuple[]",
          "internalType": "struct ICrossChainForwarder.ForwarderBridgeAdapterConfigInput[]",
          "components": [
            { "name": "currentChainBridgeAdapter", "type": "address", "internalType": "address" },
            { "name": "destinationBridgeAdapter", "type": "address", "internalType": "address" },
            { "name": "destinationChainId", "type": "uint256", "internalType": "uint256" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "forwardMessage",
      "inputs": [
        { "name": "destinationChainId", "type": "uint256", "internalType": "uint256" },
        { "name": "destination", "type": "address", "internalType": "address" },
        { "name": "gasLimit", "type": "uint256", "internalType": "uint256" },
        { "name": "message", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [
        { "name": "", "type": "bytes32", "internalType": "bytes32" },
        { "name": "", "type": "bytes32", "internalType": "bytes32" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getConfigurationByChain",
      "inputs": [{ "name": "chainId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ICrossChainReceiver.ReceiverConfiguration",
          "components": [
            { "name": "requiredConfirmation", "type": "uint8", "internalType": "uint8" },
            { "name": "validityTimestamp", "type": "uint120", "internalType": "uint120" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentEnvelopeNonce",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getCurrentTransactionNonce",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getEnvelopeState",
      "inputs": [{ "name": "envelopeId", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [{ "name": "", "type": "uint8", "internalType": "enum ICrossChainReceiver.EnvelopeState" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getEnvelopeState",
      "inputs": [
        {
          "name": "envelope",
          "type": "tuple",
          "internalType": "struct Envelope",
          "components": [
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "origin", "type": "address", "internalType": "address" },
            { "name": "destination", "type": "address", "internalType": "address" },
            { "name": "originChainId", "type": "uint256", "internalType": "uint256" },
            { "name": "destinationChainId", "type": "uint256", "internalType": "uint256" },
            { "name": "message", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "uint8", "internalType": "enum ICrossChainReceiver.EnvelopeState" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getForwarderBridgeAdaptersByChain",
      "inputs": [{ "name": "chainId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct ICrossChainForwarder.ChainIdBridgeConfig[]",
          "components": [
            { "name": "destinationBridgeAdapter", "type": "address", "internalType": "address" },
            { "name": "currentChainBridgeAdapter", "type": "address", "internalType": "address" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getReceiverBridgeAdaptersByChain",
      "inputs": [{ "name": "chainId", "type": "uint256", "internalType": "uint256" }],
      "outputs": [{ "name": "", "type": "address[]", "internalType": "address[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getSupportedChains",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256[]", "internalType": "uint256[]" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTransactionState",
      "inputs": [
        {
          "name": "transaction",
          "type": "tuple",
          "internalType": "struct Transaction",
          "components": [
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "encodedEnvelope", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ICrossChainReceiver.TransactionStateWithoutAdapters",
          "components": [
            { "name": "confirmations", "type": "uint8", "internalType": "uint8" },
            { "name": "firstBridgedAt", "type": "uint120", "internalType": "uint120" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getTransactionState",
      "inputs": [{ "name": "transactionId", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct ICrossChainReceiver.TransactionStateWithoutAdapters",
          "components": [
            { "name": "confirmations", "type": "uint8", "internalType": "uint8" },
            { "name": "firstBridgedAt", "type": "uint120", "internalType": "uint120" }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "guardian",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" },
        { "name": "guardian", "type": "address", "internalType": "address" },
        {
          "name": "initialRequiredConfirmations",
          "type": "tuple[]",
          "internalType": "struct ICrossChainReceiver.ConfirmationInput[]",
          "components": [
            { "name": "chainId", "type": "uint256", "internalType": "uint256" },
            { "name": "requiredConfirmations", "type": "uint8", "internalType": "uint8" }
          ]
        },
        {
          "name": "receiverBridgeAdaptersToAllow",
          "type": "tuple[]",
          "internalType": "struct ICrossChainReceiver.ReceiverBridgeAdapterConfigInput[]",
          "components": [
            { "name": "bridgeAdapter", "type": "address", "internalType": "address" },
            { "name": "chainIds", "type": "uint256[]", "internalType": "uint256[]" }
          ]
        },
        {
          "name": "forwarderBridgeAdaptersToEnable",
          "type": "tuple[]",
          "internalType": "struct ICrossChainForwarder.ForwarderBridgeAdapterConfigInput[]",
          "components": [
            { "name": "currentChainBridgeAdapter", "type": "address", "internalType": "address" },
            { "name": "destinationBridgeAdapter", "type": "address", "internalType": "address" },
            { "name": "destinationChainId", "type": "uint256", "internalType": "uint256" }
          ]
        },
        { "name": "sendersToApprove", "type": "address[]", "internalType": "address[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isEnvelopeRegistered",
      "inputs": [
        {
          "name": "envelope",
          "type": "tuple",
          "internalType": "struct Envelope",
          "components": [
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "origin", "type": "address", "internalType": "address" },
            { "name": "destination", "type": "address", "internalType": "address" },
            { "name": "originChainId", "type": "uint256", "internalType": "uint256" },
            { "name": "destinationChainId", "type": "uint256", "internalType": "uint256" },
            { "name": "message", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isEnvelopeRegistered",
      "inputs": [{ "name": "envelopeId", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isReceiverBridgeAdapterAllowed",
      "inputs": [
        { "name": "bridgeAdapter", "type": "address", "internalType": "address" },
        { "name": "chainId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isSenderApproved",
      "inputs": [{ "name": "sender", "type": "address", "internalType": "address" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTransactionForwarded",
      "inputs": [{ "name": "transactionId", "type": "bytes32", "internalType": "bytes32" }],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTransactionForwarded",
      "inputs": [
        {
          "name": "transaction",
          "type": "tuple",
          "internalType": "struct Transaction",
          "components": [
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "encodedEnvelope", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isTransactionReceivedByAdapter",
      "inputs": [
        { "name": "transactionId", "type": "bytes32", "internalType": "bytes32" },
        { "name": "bridgeAdapter", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "receiveCrossChainMessage",
      "inputs": [
        { "name": "encodedTransaction", "type": "bytes", "internalType": "bytes" },
        { "name": "originChainId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "removeSenders",
      "inputs": [{ "name": "senders", "type": "address[]", "internalType": "address[]" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    { "type": "function", "name": "renounceOwnership", "inputs": [], "outputs": [], "stateMutability": "nonpayable" },
    {
      "type": "function",
      "name": "retryEnvelope",
      "inputs": [
        {
          "name": "envelope",
          "type": "tuple",
          "internalType": "struct Envelope",
          "components": [
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "origin", "type": "address", "internalType": "address" },
            { "name": "destination", "type": "address", "internalType": "address" },
            { "name": "originChainId", "type": "uint256", "internalType": "uint256" },
            { "name": "destinationChainId", "type": "uint256", "internalType": "uint256" },
            { "name": "message", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "gasLimit", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "retryTransaction",
      "inputs": [
        { "name": "encodedTransaction", "type": "bytes", "internalType": "bytes" },
        { "name": "gasLimit", "type": "uint256", "internalType": "uint256" },
        { "name": "bridgeAdaptersToRetry", "type": "address[]", "internalType": "address[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [{ "name": "newOwner", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateConfirmations",
      "inputs": [
        {
          "name": "newConfirmations",
          "type": "tuple[]",
          "internalType": "struct ICrossChainReceiver.ConfirmationInput[]",
          "components": [
            { "name": "chainId", "type": "uint256", "internalType": "uint256" },
            { "name": "requiredConfirmations", "type": "uint8", "internalType": "uint8" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateGuardian",
      "inputs": [{ "name": "newGuardian", "type": "address", "internalType": "address" }],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateMessagesValidityTimestamp",
      "inputs": [
        {
          "name": "newValidityTimestamp",
          "type": "tuple[]",
          "internalType": "struct ICrossChainReceiver.ValidityTimestampInput[]",
          "components": [
            { "name": "chainId", "type": "uint256", "internalType": "uint256" },
            { "name": "validityTimestamp", "type": "uint120", "internalType": "uint120" }
          ]
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "whoCanRescue",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "BridgeAdapterUpdated",
      "inputs": [
        { "name": "destinationChainId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        { "name": "bridgeAdapter", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "destinationBridgeAdapter", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "allowed", "type": "bool", "indexed": true, "internalType": "bool" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ConfirmationsUpdated",
      "inputs": [
        { "name": "newConfirmations", "type": "uint8", "indexed": false, "internalType": "uint8" },
        { "name": "chainId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ERC20Rescued",
      "inputs": [
        { "name": "caller", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "token", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "EnvelopeDeliveryAttempted",
      "inputs": [
        { "name": "envelopeId", "type": "bytes32", "indexed": false, "internalType": "bytes32" },
        {
          "name": "envelope",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Envelope",
          "components": [
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "origin", "type": "address", "internalType": "address" },
            { "name": "destination", "type": "address", "internalType": "address" },
            { "name": "originChainId", "type": "uint256", "internalType": "uint256" },
            { "name": "destinationChainId", "type": "uint256", "internalType": "uint256" },
            { "name": "message", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "isDelivered", "type": "bool", "indexed": false, "internalType": "bool" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "EnvelopeRegistered",
      "inputs": [
        { "name": "envelopeId", "type": "bytes32", "indexed": true, "internalType": "bytes32" },
        {
          "name": "envelope",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Envelope",
          "components": [
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "origin", "type": "address", "internalType": "address" },
            { "name": "destination", "type": "address", "internalType": "address" },
            { "name": "originChainId", "type": "uint256", "internalType": "uint256" },
            { "name": "destinationChainId", "type": "uint256", "internalType": "uint256" },
            { "name": "message", "type": "bytes", "internalType": "bytes" }
          ]
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "GuardianUpdated",
      "inputs": [
        { "name": "oldGuardian", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "newGuardian", "type": "address", "indexed": false, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [{ "name": "version", "type": "uint8", "indexed": false, "internalType": "uint8" }],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NativeTokensRescued",
      "inputs": [
        { "name": "caller", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "to", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "amount", "type": "uint256", "indexed": false, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "NewInvalidation",
      "inputs": [
        { "name": "invalidTimestamp", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "chainId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        { "name": "previousOwner", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "newOwner", "type": "address", "indexed": true, "internalType": "address" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ReceiverBridgeAdaptersUpdated",
      "inputs": [
        { "name": "bridgeAdapter", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "allowed", "type": "bool", "indexed": true, "internalType": "bool" },
        { "name": "chainId", "type": "uint256", "indexed": true, "internalType": "uint256" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "SenderUpdated",
      "inputs": [
        { "name": "sender", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "isApproved", "type": "bool", "indexed": true, "internalType": "bool" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransactionForwardingAttempted",
      "inputs": [
        { "name": "transactionId", "type": "bytes32", "indexed": false, "internalType": "bytes32" },
        { "name": "envelopeId", "type": "bytes32", "indexed": true, "internalType": "bytes32" },
        { "name": "encodedTransaction", "type": "bytes", "indexed": false, "internalType": "bytes" },
        { "name": "destinationChainId", "type": "uint256", "indexed": false, "internalType": "uint256" },
        { "name": "bridgeAdapter", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "destinationBridgeAdapter", "type": "address", "indexed": false, "internalType": "address" },
        { "name": "adapterSuccessful", "type": "bool", "indexed": true, "internalType": "bool" },
        { "name": "returnData", "type": "bytes", "indexed": false, "internalType": "bytes" }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "TransactionReceived",
      "inputs": [
        { "name": "transactionId", "type": "bytes32", "indexed": false, "internalType": "bytes32" },
        { "name": "envelopeId", "type": "bytes32", "indexed": true, "internalType": "bytes32" },
        { "name": "originChainId", "type": "uint256", "indexed": true, "internalType": "uint256" },
        {
          "name": "transaction",
          "type": "tuple",
          "indexed": false,
          "internalType": "struct Transaction",
          "components": [
            { "name": "nonce", "type": "uint256", "internalType": "uint256" },
            { "name": "encodedEnvelope", "type": "bytes", "internalType": "bytes" }
          ]
        },
        { "name": "bridgeAdapter", "type": "address", "indexed": true, "internalType": "address" },
        { "name": "confirmations", "type": "uint8", "indexed": false, "internalType": "uint8" }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [{ "name": "token", "type": "address", "internalType": "address" }]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "393:667:178:-:0;;;;;;;;;;;;-1:-1:-1;1092:26:177;;;1116:1;1092:26;;;;;;;;;;;;;393:667:178;;;;;;;;;-1:-1:-1;393:667:178;;;;;;;1092:26:177;;;;;;;;;;;;;;;-1:-1:-1;1120:41:177;;;1159:1;1120:41;;;;;;;;;;;;;393:667:178;;;;;;;;;-1:-1:-1;393:667:178;;;;;;;1120:41:177;;;;;;;;;;;;;;;-1:-1:-1;1187:42:177;;;1227:1;1187:42;;;;;;;;;;;;;393:667:178;;;;;;;;-1:-1:-1;393:667:178;;;;;;;;;;;;;;1187:42:177;;-1:-1:-1;;1187:42:177;;;;;;;;;;;-1:-1:-1;1231:16:177;;;1245:1;1231:16;;;;;;;;1031:32:71;831:10:70;1031:18:71;:32::i;:::-;289:29:64;831:10:70;289:15:64;:29::i;:::-;3022:31:180;;;3051:1;3022:31;;;;;;;;;2959:148;;2992:22;;3022:31;;;;393:667:178;;;;;;;;;-1:-1:-1;393:667:178;;;;;;;3022:31:180;;;;;;;;;;;;;;;-1:-1:-1;3085:16:180;;;3099:1;3085:16;;;;;;;;3061;;2959:25;:148::i;:::-;-1:-1:-1;;2472:41:181;;;2511:1;2472:41;;;;;;;;;2411:144;;2443:21;;2472:41;;;;393:667:178;;;;;;;;;-1:-1:-1;393:667:178;;;;;;;2472:41:181;;;;;;;;;;;;;;;-1:-1:-1;2521:28:181;2411:24;:144::i;:::-;-1:-1:-1;3167:22:80;;-1:-1:-1;3167:20:80;:22::i;:::-;393:667:178;;2428:173:71;2497:16;2516:6;;-1:-1:-1;;;;;2528:17:71;;;-1:-1:-1;;;;;;2528:17:71;;;;;;2556:40;;2516:6;;;;;;;2556:40;;2497:16;2556:40;2491:110;2428:173;:::o;814:178:64:-;897:9;;;-1:-1:-1;;;;;912:23:64;;;-1:-1:-1;;;;;;912:23:64;;;;;;;946:41;;;897:9;;;;358:34:290;;;423:2;408:18;;401:43;;;;946:41:64;;293:18:290;946:41:64;;;;;;;869:123;814:178;:::o;16169:426:180:-;16418:38;16440:15;16418:21;:38::i;:::-;16462:40;16485:16;16462:22;:40::i;:::-;16508:37;16523:15;16540:4;16508:14;:37::i;:::-;16551:39;16566:16;16584:5;16551:14;:39::i;:::-;16169:426;;;;:::o;12592:525:181:-;12956:52;12986:15;13003:4;12956:29;:52::i;:::-;13014:54;13044:16;13062:5;13014:29;:54::i;:::-;13074:38;13095:16;13074:20;:38::i;:::-;12592:525;;;:::o;5608:253:80:-;5672:13;;;;;;;5671:14;5663:66;;;;-1:-1:-1;;;5663:66:80;;657:2:290;5663:66:80;;;639:21:290;696:2;676:18;;;669:30;735:34;715:18;;;708:62;-1:-1:-1;;;786:18:290;;;779:37;833:19;;5663:66:80;;;;;;;;;5739:12;;5754:15;5739:12;;;:30;5735:122;;;5779:12;:30;;-1:-1:-1;;5779:30:80;5794:15;5779:30;;;;;;5822:28;;1005:36:290;;;5822:28:80;;993:2:290;978:18;5822:28:80;;;;;;;5735:122;5608:253::o;11856:2445:180:-;11974:9;11969:2328;11993:14;:21;11989:1;:25;11969:2328;;;12029:65;12097:14;12112:1;12097:17;;;;;;;;:::i;:::-;;;;;;;12029:85;;12201:1;-1:-1:-1;;;;;12140:63:180;:24;:49;;;-1:-1:-1;;;;;12140:63:180;;;:141;;;;-1:-1:-1;12217:50:180;;-1:-1:-1;;;;;12217:64:180;;;12140:141;12291:51;;;;;;;;;;;;;-1:-1:-1;;;12291:51:180;;;12123:227;;;;;-1:-1:-1;;;12123:227:180;;;;;;;;:::i;:::-;-1:-1:-1;12443:43:180;;;;;12358:50;12411:83;;;:22;:83;;;;;;12358:50;12579:905;12603:27;;12599:31;;12579:905;;;12647:47;12697:20;12718:1;12697:23;;;;;;;;:::i;:::-;;;;;;;;;12805:50;;12697:23;;;;;12746:45;;;;12697:23;;-1:-1:-1;;;;;;12746:109:180;;;:45;;:109;12731:745;;12955:49;;;;12895:44;;-1:-1:-1;;;;;12895:44:180;;;:109;;;12878:541;;13078:64;;;;;13031:111;;-1:-1:-1;;;;;;13031:111:180;-1:-1:-1;;;;;13031:111:180;;;;;;;;13257:50;;13198:43;;;;;13162:244;;1986:51:290;;;-1:-1:-1;;13162:244:180;;;;;13198:43;-1:-1:-1;;;;;;;;;;;13162:244:180;1959:18:290;13162:244:180;;;;;;;12878:541;13444:4;13430:18;;13460:5;;;12731:745;-1:-1:-1;12632:3:180;;;;:::i;:::-;;;;12579:905;;;;13497:11;13492:799;;13593:50;;13655:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13655:59:180;;;-1:-1:-1;;;13655:59:180;;;;13726:35;;;;;;;;;;;-1:-1:-1;;;13726:35:180;;;;;;;13553:218;;13593:50;13726:35;13553:28;:218;:::i;:::-;-1:-1:-1;13819:213:180;;;;;;;;13879:49;;;;;;-1:-1:-1;;;;;13819:213:180;;;;;13969:50;;13819:213;;;;;;;;13782:260;;;;;;;;-1:-1:-1;13782:260:180;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13782:260:180;;;;;;;;;;;;;;;;;;;;;;;;;;14145:50;;14090:43;;;;14207:49;;14058:224;;2004:32:290;;;1986:51;;13782:260:180;;14058:224;;;14090:43;;-1:-1:-1;;;;;;;;;;;14058:224:180;1959:18:290;14058:224:180;;;;;;;13492:799;12021:2276;;;12016:3;;;;;:::i;:::-;;;;11969:2328;;;;11856:2445;:::o;14445:1131::-;14562:9;14557:1015;14581:23;:30;14577:1;:34;14557:1015;;;14631:9;14626:940;14650:23;14674:1;14650:26;;;;;;;;:::i;:::-;;;;;;;:35;;;:42;14646:1;:46;14626:940;;;14709:50;14762:22;:82;14796:23;14820:1;14796:26;;;;;;;;:::i;:::-;;;;;;;:35;;;14832:1;14796:38;;;;;;;;:::i;:::-;;;;;;;14762:82;;;;;;;;;;;14709:135;;14860:9;14855:703;14879:27;;14875:31;;14855:703;;;15007:23;15031:1;15007:26;;;;;;;;:::i;:::-;;;;;;;:40;;;-1:-1:-1;;;;;14942:105:180;:20;14963:1;14942:23;;;;;;;;:::i;:::-;;;;;;;;;:49;:23;;;;;:49;;-1:-1:-1;;;;;14942:49:180;:105;14925:623;;15074:32;15109:20;15130:1;15109:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:48;15219:27;;-1:-1:-1;;;;;15109:48:180;;;;-1:-1:-1;15198:20:180;;15219:31;;15109:48;;15219:31;:::i;:::-;15198:53;;;;;;;;:::i;:::-;;;;;;;;;;;15172:20;15193:1;15172:23;;;;;;;;:::i;:::-;;;;;;;;;:79;;:23;;;;;:79;;-1:-1:-1;;;;;15172:79:180;;;-1:-1:-1;;;;;;15172:79:180;;;;;;-1:-1:-1;15172:79:180;;;;;;;;;;;;;;;;;;;;;;15265:26;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;15265:26:180;;;;;;;;;-1:-1:-1;;;;;;15265:26:180;;;;;;;;;;;;;;;;;;;15401;;:23;;15425:1;;15401:26;;;;;;:::i;:::-;;;;;;;:40;;;-1:-1:-1;;;;;15311:205:180;15347:23;15371:1;15347:26;;;;;;;;:::i;:::-;;;;;;;:35;;;15383:1;15347:38;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;;;;;;;15457:24:180;15311:205;;;;;-1:-1:-1;;;;;2004:32:290;;;;1986:51;;1974:2;1959:18;;1840:203;15311:205:180;;;;;;;;15530:5;;;14925:623;14908:3;;;;:::i;:::-;;;;14855:703;;;;14699:867;14694:3;;;;;:::i;:::-;;;;14626:940;;;-1:-1:-1;14613:3:180;;;;:::i;:::-;;;;14557:1015;;15789:295;15874:9;15869:211;15893:7;:14;15889:1;:18;15869:211;;;15952:1;-1:-1:-1;;;;;15930:24:180;:7;15938:1;15930:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;15930:24:180;;;15956:21;;;;;;;;;;;;;-1:-1:-1;;;15956:21:180;;;15922:56;;;;;-1:-1:-1;;;15922:56:180;;;;;;;;:::i;:::-;;16017:8;15986:16;:28;16003:7;16011:1;16003:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;15986:28:180;-1:-1:-1;;;;;15986:28:180;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;16064:8;16038:35;;16052:7;16060:1;16052:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;16038:35:180;;;;;;;;;;;15909:3;;;;:::i;:::-;;;;15869:211;;11294:1213:181;11444:9;11439:1064;11463:19;:26;11459:1;:30;11439:1064;;;11504:45;11552:19;11572:1;11552:22;;;;;;;;:::i;:::-;;;;;;;11504:70;;11621:1;-1:-1:-1;;;;;11590:33:181;:5;:19;;;-1:-1:-1;;;;;11590:33:181;;;11625:29;;;;;;;;;;;;;-1:-1:-1;;;11625:29:181;;;11582:73;;;;;-1:-1:-1;;;11582:73:181;;;;;;;;:::i;:::-;;11669:9;11664:833;11684:5;:14;;;:21;11680:1;:25;11664:833;;;11722:20;11756:9;11752:599;;;11779:39;11800:5;:14;;;11815:1;11800:17;;;;;;;;:::i;:::-;;;;;;;11779:16;:20;;;;:39;;;;:::i;:::-;;11848:112;11929:5;:19;;;11848:22;:41;11871:5;:14;;;11886:1;11871:17;;;;;;;;:::i;:::-;;;;;;;11848:41;;;;;;;;;;;:63;;:67;;;;:112;;;;:::i;:::-;11830:130;;11752:599;;;12007:115;12091:5;:19;;;12007:22;:41;12030:5;:14;;;12045:1;12030:17;;;;;;;;:::i;:::-;;;;;;;12007:41;;;;;;;;;;;:63;;:70;;;;:115;;;;:::i;:::-;11989:133;;12151:15;:108;;;;;12182:72;:22;:41;12205:5;:14;;;12220:1;12205:17;;;;;;;;:::i;:::-;;;;;;;12182:41;;;;;;;;;;;:63;;:70;;;:72;;:::i;:::-;:77;12151:108;12134:207;;;12286:42;12310:5;:14;;;12325:1;12310:17;;;;;;;;:::i;:::-;;;;;;;12286:16;:23;;;;:42;;;;:::i;:::-;;12134:207;12364:15;12360:129;;;12460:5;:14;;;12475:1;12460:17;;;;;;;;:::i;:::-;;;;;;;12449:9;12398:80;;12428:5;:19;;;-1:-1:-1;;;;;12398:80:181;;;;;;;;;;;12360:129;-1:-1:-1;11707:3:181;;;;:::i;:::-;;;;11664:833;;;;11496:1007;11491:3;;;;;:::i;:::-;;;;11439:1064;;10402:714;10497:9;10492:620;10512:16;:23;10508:1;:27;10492:620;;;10550:38;10591:16;10608:1;10591:19;;;;;;;;:::i;:::-;;;;;;;10550:60;;10673:1;10635:13;:35;;;:39;;;:178;;;;-1:-1:-1;10760:21:181;;10737:45;;;;:22;:45;;;;;:76;;:67;;:74;:76::i;:::-;10688:13;:35;;;:125;;;;10635:178;10823:37;;;;;;;;;;;;;-1:-1:-1;;;10823:37:181;;;10618:250;;;;;-1:-1:-1;;;10618:250:181;;;;;;;;:::i;:::-;-1:-1:-1;10977:35:181;;;;;;10899:21;;10876:45;;;;:22;:45;;;;;;;:136;;-1:-1:-1;;10876:136:181;;;;;;;;11083:21;;11046:35;;11025:80;;1023:17:290;;1005:36;;11083:21:181;;11025:80;;978:18:290;11025:80:181;;;;;;;-1:-1:-1;10537:3:181;;;;:::i;:::-;;;;10492:620;;6603:301:69;6730:12;6751;6765:23;6792:6;-1:-1:-1;;;;;6792:19:69;6812:4;6792:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6750:67:69;;-1:-1:-1;6750:67:69;-1:-1:-1;6830:69:69;6857:6;6750:67;;6886:12;6830:26;:69::i;:::-;6823:76;6603:301;-1:-1:-1;;;;;;6603:301:69:o;10793:129:63:-;10860:4;10883:32;10888:3;10908:5;10883:4;:32::i;:::-;10876:39;;10793:129;;;;;:::o;8305:150::-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:63;;8398:4;:50::i;8623:156::-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:63;;8719:7;:53::i;9106:115::-;9169:7;9195:19;9203:3;4545:18;;4463:107;11090:135;11160:4;11183:35;11191:3;11211:5;11183:7;:35::i;7178:548:69:-;7340:12;7364:7;7360:362;;;7385:10;:17;7406:1;7385:22;7381:256;;-1:-1:-1;;;;;1513:19:69;;;7568:60;;;;-1:-1:-1;;;7568:60:69;;3079:2:290;7568:60:69;;;3061:21:290;3118:2;3098:18;;;3091:30;3157:31;3137:18;;;3130:59;3206:18;;7568:60:69;2877:353:290;7568:60:69;-1:-1:-1;7651:10:69;7644:17;;7360:362;7682:33;7690:10;7702:12;7682:7;:33::i;:::-;7178:548;;;;;;:::o;2214:404:63:-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:63;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:63;2589:12;;2786:1388;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:63;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;8192:476:69;8343:17;;:21;8339:325;;8545:10;8539:17;8593:15;8580:10;8576:2;8572:19;8565:44;8339:325;8644:12;8637:20;;-1:-1:-1;;;8637:20:69;;;;;;;;:::i;1052:127:290:-;1113:10;1108:3;1104:20;1101:1;1094:31;1144:4;1141:1;1134:15;1168:4;1165:1;1158:15;1184:250;1269:1;1279:113;1293:6;1290:1;1287:13;1279:113;;;1369:11;;;1363:18;1350:11;;;1343:39;1315:2;1308:10;1279:113;;;-1:-1:-1;;1426:1:290;1408:16;;1401:27;1184:250::o;1439:396::-;1588:2;1577:9;1570:21;1551:4;1620:6;1614:13;1663:6;1658:2;1647:9;1643:18;1636:34;1679:79;1751:6;1746:2;1735:9;1731:18;1726:2;1718:6;1714:15;1679:79;:::i;:::-;1819:2;1798:15;-1:-1:-1;;1794:29:290;1779:45;;;;1826:2;1775:54;;1439:396;-1:-1:-1;;1439:396:290:o;2048:127::-;2109:10;2104:3;2100:20;2097:1;2090:31;2140:4;2137:1;2130:15;2164:4;2161:1;2154:15;2180:135;2219:3;2240:17;;;2237:43;;2260:18;;:::i;:::-;-1:-1:-1;2307:1:290;2296:13;;2180:135::o;2320:128::-;2387:9;;;2408:11;;;2405:37;;;2422:18;;:::i;2453:127::-;2514:10;2509:3;2505:20;2502:1;2495:31;2545:4;2542:1;2535:15;2569:4;2566:1;2559:15;2585:287;2714:3;2752:6;2746:13;2768:66;2827:6;2822:3;2815:4;2807:6;2803:17;2768:66;:::i;:::-;2850:16;;;;;2585:287;-1:-1:-1;;2585:287:290:o;2877:353::-;393:667:178;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "393:667:178:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9520:164:180;;;;;;;;;;-1:-1:-1;9520:164:180;;;;;:::i;:::-;;:::i;:::-;;3832:190:181;;;;;;;;;;-1:-1:-1;3832:190:181;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8698:518;;;;;;;;;;-1:-1:-1;8698:518:181;;;;;:::i;:::-;;:::i;9003:170:180:-;;;;;;;;;;-1:-1:-1;9003:170:180;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3459:111::-;;;;;;;;;;-1:-1:-1;3459:111:180;;;;;:::i;:::-;-1:-1:-1;;;;;3541:24:180;3522:4;3541:24;;;:16;:24;;;;;;;;;3459:111;;;;7959:14:290;;7952:22;7934:41;;7922:2;7907:18;3459:111:180;7794:187:290;6903:2057:180;;;;;;;;;;-1:-1:-1;6903:2057:180;;;;;:::i;:::-;;:::i;3613:139::-;;;;;;;;;;-1:-1:-1;3613:139:180;;;;;:::i;:::-;;:::i;465:86:64:-;;;;;;;;;;-1:-1:-1;537:9:64;;-1:-1:-1;;;;;537:9:64;465:86;;;-1:-1:-1;;;;;9565:32:290;;;9547:51;;9535:2;9520:18;465:86:64;9401:203:290;4340:1442:180;;;;;;;;;;-1:-1:-1;4340:1442:180;;;;;:::i;:::-;;:::i;:::-;;;;10380:25:290;;;10436:2;10421:18;;10414:34;;;;10353:18;4340:1442:180;10206:248:290;2602:186:181;;;;;;;;;;-1:-1:-1;2602:186:181;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3304:112:180:-;;;;;;;;;;-1:-1:-1;3387:24:180;;3304:112;;;11268:25:290;;;11256:2;11241:18;3304:112:180;11122:177:290;2986:174:181;;;;;;;;;;-1:-1:-1;2986:174:181;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;3110:31:181;;;;:22;:31;;;;;;;;;3103:52;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3103:52:181;;;;;;2986:174;1862:95:71;;;;;;;;;;;;;:::i;9368:109:180:-;;;;;;;;;;-1:-1:-1;9368:109:180;;;;;:::i;:::-;;:::i;4417:210:181:-;;;;;;;;;;-1:-1:-1;4417:210:181;;;;;:::i;:::-;4538:4;4557:33;;;:18;:33;;;;;;;;-1:-1:-1;;;;;4557:65:181;;;;:50;;:65;;;;;;;;4417:210;;;;;518:540:178;;;;;;;;;;-1:-1:-1;518:540:178;;;;;:::i;:::-;;:::i;1268:79:71:-;;;;;;;;;;-1:-1:-1;1314:7:71;1336:6;-1:-1:-1;;;;;1336:6:71;1268:79;;9216:109:180;;;;;;;;;;-1:-1:-1;9216:109:180;;;;;:::i;:::-;;:::i;9727:155::-;;;;;;;;;;-1:-1:-1;9727:155:180;;;;;:::i;:::-;;:::i;4160:137::-;;;;;;;;;;-1:-1:-1;4160:137:180;;;;;:::i;:::-;4236:4;4255:37;;;:22;:37;;;;;;;;;4160:137;5082:194:181;;;;;;;;;;-1:-1:-1;5082:194:181;;;;;:::i;:::-;;:::i;5825:1035:180:-;;;;;;;;;;-1:-1:-1;5825:1035:180;;;;;:::i;:::-;;:::i;4853:187:181:-;;;;;;;;;;-1:-1:-1;4853:187:181;;;;;:::i;:::-;;:::i;659:238:87:-;;;;;;;;;;-1:-1:-1;659:238:87;;;;;:::i;:::-;;:::i;4248:127:181:-;;;;;;;;;;-1:-1:-1;4248:127:181;;;;;:::i;:::-;4315:13;4343:27;;;:15;:27;;;;;;;;;4248:127;;;;;;;;:::i;3965:152:180:-;;;;;;;;;;-1:-1:-1;3965:152:180;;;;;:::i;:::-;;:::i;2830:114:181:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;3458:332::-;;;;;;;;;;-1:-1:-1;3458:332:181;;;;;:::i;:::-;-1:-1:-1;;;;;;;;;;;;;;;;;;3598:187:181;;;;;;;;-1:-1:-1;3655:33:181;;;:18;:33;;;;;;;:47;;;;3598:187;;3728:33;;;;;;3655:47;3728:48;;;-1:-1:-1;;;;;3728:48:181;3598:187;;;;;3458:332;3795:127:180;;;;;;;;;;-1:-1:-1;3795:127:180;;;;;:::i;:::-;3866:4;3885:32;;;:20;:32;;;;;;;;;3795:127;4064:142:181;;;;;;;;;;-1:-1:-1;4064:142:181;;;;;:::i;:::-;;:::i;5318:188::-;;;;;;;;;;-1:-1:-1;5318:188:181;;;;;:::i;:::-;;:::i;5548:3108::-;;;;;;;;;;-1:-1:-1;5548:3108:181;;;;;:::i;:::-;;:::i;930:252:87:-;;;;;;;;;;-1:-1:-1;930:252:87;;;;;:::i;:::-;;:::i;3155:106:180:-;;;;;;;;;;-1:-1:-1;3235:21:180;;3155:106;;2096:188:71;;;;;;;;;;-1:-1:-1;2096:188:71;;;;;:::i;:::-;;:::i;3202:214:181:-;;;;;;;;;;-1:-1:-1;3202:214:181;;;;;:::i;:::-;;:::i;587:122:64:-;;;;;;;;;;-1:-1:-1;587:122:64;;;;;:::i;:::-;;:::i;4669:142:181:-;;;;;;;;;;-1:-1:-1;4669:142:181;;;;;:::i;:::-;;:::i;9520:164:180:-;1175:13:71;:11;:13::i;:::-;9642:37:180::1;9664:14;9642:21;:37::i;:::-;9520:164:::0;:::o;3832:190:181:-;-1:-1:-1;;;;;;;;;;;;;;;;;3977:40:181;3997:19;:11;:17;:19::i;3977:40::-;3970:47;3832:190;-1:-1:-1;;3832:190:181:o;8698:518::-;8764:18;8785:16;:8;:14;:16::i;:::-;8764:37;-1:-1:-1;8853:23:181;8822:27;;;;:15;:27;;;;;;;;:54;;;;;;;;:::i;:::-;;8884:42;;;;;;;;;;;;;-1:-1:-1;;;8884:42:181;;;8807:125;;;;;-1:-1:-1;;;8807:125:181;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;8939:27:181;;;;:15;:27;;;;;;;;;:53;;-1:-1:-1;;8939:53:181;8969:23;8939:53;;;9018:20;;;;9072:15;;;;9095:22;;;;9125:16;;;;8998:149;;-1:-1:-1;;;8998:149:181;;-1:-1:-1;;;;;8998:66:181;;;;;;:149;;9072:15;9095:22;9125:16;8998:149;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9158:53;9184:10;9196:8;9206:4;9158:53;;;;;;;;:::i;:::-;;;;;;;;8758:458;8698:518;:::o;9003:170:180:-;9094:28;9137:22;:31;9160:7;9137:31;;;;;;;;;;;9130:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9130:38:180;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9003:170;;;:::o;6903:2057::-;426:23:64;:21;:23::i;:::-;4891:22:246;;;;;;7071:21:180::1;::::0;4236:4;4255:37;;;:22;:37;;;;;;7071:66;;-1:-1:-1;4255:37:180;;7284:43:::1;;;;;;;;;;;;;-1:-1:-1::0;;;7284:43:180::1;;::::0;7237:91:::1;;;;;-1:-1:-1::0;;;7237:91:180::1;;;;;;;;:::i;:::-;;7335:30;7368:43;7392:18;7368:23;:43::i;:::-;7335:76;;7417:24;7444:25;:11;:23;:25::i;:::-;7417:52;;7476:53;7532:22;:63;7562:8;:27;;;7532:63;;;;;;;;;;;7476:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;7476:119:180;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;;;;;;;;;;7643:1;7609:24;:31;:35;7646:45;;;;;;;;;;;;;-1:-1:-1::0;;;7646:45:180::1;;::::0;7601:91:::1;;;;;-1:-1:-1::0;;;7601:91:180::1;;;;;;;;:::i;:::-;;7699:56;7791:21;:28;-1:-1:-1::0;;;;;7758:67:180::1;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;;;;;;;;;;;;;;;7758:67:180::1;;;;;;;;;;;;;;;;7699:126;;7837:9;7832:829;7856:21;:28;7852:1;:32;7832:829;;;7970:9;7982:5;:1:::0;7986::::1;7982:5;:::i;:::-;7970:17;;7965:214;7993:21;:28;7989:1;:32;7965:214;;;8085:21;8107:1;8085:24;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;8057:52:180::1;:21;8079:1;8057:24;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;8057:52:180::1;;;8121:39;;;;;;;;;;;;;-1:-1:-1::0;;;8121:39:180::1;;::::0;8038:132:::1;;;;;-1:-1:-1::0;;;8038:132:180::1;;;;;;;;:::i;:::-;-1:-1:-1::0;8023:3:180;::::1;::::0;::::1;:::i;:::-;;;;7965:214;;;;8243:24;8288:9:::0;8283:305:::1;8307:24;:31;8303:1;:35;8283:305;;;8387:24;8412:1;8387:27;;;;;;;;:::i;:::-;;;;;;;:53;;;-1:-1:-1::0;;;;;8359:81:180::1;:21;8381:1;8359:24;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;8359:81:180::1;::::0;8355:225:::1;;8487:24;8512:1;8487:27;;;;;;;;:::i;:::-;;;;;;;8454;8482:1;8454:30;;;;;;;;:::i;:::-;;;;;;:60;;;;8548:4;8526:26;;8564:5;;8355:225;8340:3:::0;::::1;::::0;::::1;:::i;:::-;;;;8283:305;;;-1:-1:-1::0;8624:29:180::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;8624:29:180::1;::::0;::::1;::::0;8603:19;8595:59:::1;;;;-1:-1:-1::0;;;8595:59:180::1;;;;;;;;:::i;:::-;;7891:770;7886:3;;;;;:::i;:::-;;;;7832:829;;;;8667:25;8695:192;8721:27;:11;:25;:27::i;:::-;8756:13;8777:18;8803:8;:27;;;8838:8;8854:27;8695:18;:192::i;:::-;8667:220;;8901:20;8923:31;;;;;;;;;;;;;-1:-1:-1::0;;;8923:31:180::1;;::::0;8893:62:::1;;;;;-1:-1:-1::0;;;8893:62:180::1;;;;;;;;:::i;:::-;;7065:1895;;;;;;6903:2057:::0;;;:::o;3613:139::-;3690:4;3709:38;3730:16;:8;:14;:16::i;4340:1442::-;2588:10;4511:7;3541:24;;;:16;:24;;;;;;4511:7;;3541:24;;2601:36;;;;;;;;;;;;;-1:-1:-1;;;2601:36:180;;;2563:75;;;;;-1:-1:-1;;;2563:75:180;;;;;;;;:::i;:::-;-1:-1:-1;4535:43:180::1;4581:42:::0;;;:22:::1;:42;::::0;;;;;;;4535:88;;;;;;::::1;::::0;;;;;;;;;;;;4581:42;;4535:88;:43;;:88;::::1;;;;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;4535:88:180;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;;;;;;;;;;4661:1;4637:14;:21;:25;4664:45;;;;;;;;;;;;;-1:-1:-1::0;;;4664:45:180::1;;::::0;4629:81:::1;;;;;-1:-1:-1::0;;;4629:81:180::1;;;;;;;;:::i;:::-;-1:-1:-1::0;4741:21:180::1;:23:::0;;4717:21:::1;::::0;;4741:23:::1;::::0;::::1;:::i;:::-;;;;;4717:47;;4771:24;4798:208;;;;;;;;4822:13;4798:208;;;;4851:10;-1:-1:-1::0;;;;;4798:208:180::1;;;;;4882:11;-1:-1:-1::0;;;;;4798:208:180::1;;;;;4916:13;4798:208;;;;4957:18;4798:208;;;;4992:7;4798:208;;::::0;4771:235:::1;;5012:38;5053:17;:8;:15;:17::i;:::-;5223:18;::::0;;::::1;::::0;;5202:40:::1;::::0;;;:20:::1;:40:::0;;;;;;;;:47;;-1:-1:-1;;5202:47:180::1;5245:4;5202:47;::::0;;5279:18;5260:48;;5012:58;;-1:-1:-1;5279:18:180;5260:48:::1;::::0;::::1;::::0;5299:8;;5260:48:::1;:::i;:::-;;;;;;;;5315:44;5362:110;5370:87;;;;;;;;5390:24;;:26;;;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;5370:87:180;;5435:20;;5370:87:::1;::::0;;::::1;::::0;5362:108:::1;:110::i;:::-;5502:21;::::0;;::::1;::::0;;5479:45:::1;::::0;;;:22:::1;:45:::0;;;;;:52;;-1:-1:-1;;5479:52:180::1;5527:4;5479:52;::::0;;5564:18;;::::1;::::0;5590:21;;5619:23;;5650:27:::1;::::0;::::1;::::0;5315:157;;-1:-1:-1;5538:183:180::1;::::0;5685:8;5701:14;5538:18:::1;:183::i;:::-;-1:-1:-1::0;5735:18:180::1;::::0;;::::1;::::0;5755:21;::::1;::::0;5735:18;;5755:21;;-1:-1:-1;4340:1442:180;-1:-1:-1;;;;;;;;4340:1442:180:o;2602:186:181:-;2721:31;;;;:22;:31;;;;;2690:16;;2721:62;;:53;;:60;:62::i;1862:95:71:-;1175:13;:11;:13::i;:::-;1922:30:::1;1949:1;1922:18;:30::i;:::-;1862:95::o:0;9368:109:180:-;1175:13:71;:11;:13::i;:::-;9442:30:180::1;9457:7;9466:5;9442:14;:30::i;518:540:178:-:0;3489:13:80;;;;;;;3488:14;;3524:34;;;;-1:-1:-1;3542:12:80;;3557:1;3542:12;;;;:16;3524:34;3523:105;;;-1:-1:-1;3600:4:80;1513:19:69;:23;;;3572:55:80;;-1:-1:-1;3610:12:80;;;;;:17;3572:55;3508:182;;;;-1:-1:-1;;;3508:182:80;;;;;;;:::i;:::-;3696:12;:16;;-1:-1:-1;;3696:16:80;3711:1;3696:16;;;3718:55;;;;3746:13;:20;;-1:-1:-1;;3746:20:80;;;;;3718:55;867:186:178::1;890:5;903:8;919:28;955:29;992:31;1031:16;867:15;:186::i;:::-;3789:14:80::0;3785:83;;;3813:13;:21;;-1:-1:-1;;3813:21:80;;;3847:14;;-1:-1:-1;26883:36:290;;3847:14:80;;26871:2:290;26856:18;3847:14:80;;;;;;;3785:83;3460:412;518:540:178;;;;;;:::o;9216:109:180:-;1175:13:71;:11;:13::i;:::-;9291:29:180::1;9306:7;9315:4;9291:14;:29::i;9727:155::-:0;1175:13:71;:11;:13::i;:::-;9839:38:180::1;9862:14;9839:22;:38::i;5082:194:181:-:0;1175:13:71;:11;:13::i;:::-;5215:56:181::1;5245:19;5266:4;5215:29;:56::i;5825:1035:180:-:0;5942:7;426:23:64;:21;:23::i;:::-;5957:38:180::1;5998:17;:8;:15;:17::i;:::-;5957:58;;6120:40;6141:15;:18;;;3866:4:::0;3885:32;;;:20;:32;;;;;;;;;3795:127;6120:40:::1;6162:41;;;;;;;;;;;;;-1:-1:-1::0;;;6162:41:180::1;;::::0;6112:92:::1;;;;;-1:-1:-1::0;;;6112:92:180::1;;;;;;;;:::i;:::-;;6211:43;6257:22;:63;6287:8;:27;;;6257:63;;;;;;;;;;;6211:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;;;::::1;::::0;;;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;6211:109:180;;::::1;::::0;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;;;::::1;::::0;::::1;;;;;;;;;;6358:1;6334:14;:21;:25;6361:45;;;;;;;;;;;;;-1:-1:-1::0;;;6361:45:180::1;;::::0;6326:81:::1;;;;;-1:-1:-1::0;;;6326:81:180::1;;;;;;;;:::i;:::-;;6414:44;6461:110;6469:87;;;;;;;;6489:24;;:26;;;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;6469:87:180;;6534:20;;6469:87:::1;::::0;;::::1;::::0;6461:108:::1;:110::i;:::-;6601:21;::::0;;::::1;::::0;;6578:45:::1;::::0;;;:22:::1;:45:::0;;;;;:52;;-1:-1:-1;;6578:52:180::1;6626:4;6578:52;::::0;;6663:18;;::::1;::::0;6689:21;;6718:23;;6749:27:::1;::::0;::::1;::::0;6414:157;;-1:-1:-1;6637:183:180::1;::::0;6784:8;6800:14;6637:18:::1;:183::i;:::-;-1:-1:-1::0;6834:21:180::1;;::::0;;5825:1035;-1:-1:-1;;;;;5825:1035:180:o;4853:187:181:-;1175:13:71;:11;:13::i;:::-;4981:54:181::1;5014:20;4981:32;:54::i;659:238:87:-:0;2286:7:177;1336:6:71;-1:-1:-1;;;;;1336:6:71;561:10:87;:28;553:61;;;;-1:-1:-1;;;553:61:87;;27132:2:290;553:61:87;;;27114:21:290;27171:2;27151:18;;;27144:30;-1:-1:-1;;;27190:18:290;;;27183:50;27250:18;;553:61:87;26930:344:290;553:61:87;789:43:::1;-1:-1:-1::0;;;;;789:31:87;::::1;821:2:::0;825:6;789:31:::1;:43::i;:::-;881:2;-1:-1:-1::0;;;;;844:48:87::1;869:10;-1:-1:-1::0;;;;;844:48:87::1;857:10;-1:-1:-1::0;;;;;844:48:87::1;;885:6;844:48;;;;11268:25:290::0;;11256:2;11241:18;;11122:177;844:48:87::1;;;;;;;;659:238:::0;;;:::o;2308:7:177:-;2301:14;;2209:111;:::o;3965:152:180:-;4050:4;4069:43;4092:19;:11;:17;:19::i;2830:114:181:-;2883:16;2914:25;:16;:23;:25::i;4064:142::-;4139:13;4167:34;4184:16;:8;:14;:16::i;5318:188::-;1175:13:71;:11;:13::i;:::-;5449:52:181::1;5479:14;5495:5;5449:29;:52::i;5548:3108::-:0;5679:13;1892:51;1923:10;1935:7;1892:30;:51::i;:::-;1945:33;;;;;;;;;;;;;-1:-1:-1;;;1945:33:181;;;1884:95;;;;;-1:-1:-1;;;1884:95:181;;;;;;;;:::i;:::-;;5700:30:::1;5733:43;5757:18;5733:23;:43::i;:::-;5700:76;;5782:24;5809:25;:11;:23;:25::i;:::-;5782:52;;5881:13;5855:8;:22;;;:39;:87;;;;;5929:13;5898:8;:27;;;:44;5855:87;5950:24;;;;;;;;;;;;;-1:-1:-1::0;;;5950:24:181::1;;::::0;5840:140:::1;;;;;-1:-1:-1::0;;;5840:140:181::1;;;;;;;;:::i;:::-;;5986:18;6007:27;:11;:25;:27::i;:::-;4891:22:246::0;;;;;;5986:48:181;;-1:-1:-1;6041:21:181::1;::::0;6114:44:::1;6161:33:::0;;;:18:::1;:33;::::0;;;;;;;6245:37;;;:22:::1;:37:::0;;;;;;6200:103;;;;::::1;::::0;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;6200:103:181::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;::::0;;;;6789:34;;6041:66;;-1:-1:-1;6161:33:181;;6200:103;;6789:34;::::1;;6840:30:::0;;;:162:::1;;-1:-1:-1::0;6919:10:181::1;6882:48;::::0;;;:36:::1;::::0;::::1;:48;::::0;;;;;::::1;;6881:49;:120:::0;::::1;;;;6970:13;:31;;;-1:-1:-1::0;;;;;6942:59:181::1;:25;-1:-1:-1::0;;;;;6942:59:181::1;;6881:120;6829:1823;;;7021:25;-1:-1:-1::0;;;;;7021:30:181::1;7050:1;7021:30:::0;7017:116:::1;;7063:61:::0;;-1:-1:-1;;;;;;7063:61:181::1;;7108:15;-1:-1:-1::0;;;;;7063:61:181::1;;;::::0;;7017:116:::1;7166:35:::0;;7141:22:::1;::::0;7168:19;;7141:22;;7166:35:::1;::::0;::::1;;;:::i;:::-;::::0;;::::1;::::0;;::::1;;::::0;;;::::1;::::0;;::::1;::::0;::::1;;;::::0;;;::::1;::::0;;;7246:10:::1;-1:-1:-1::0;7209:48:181;;;-1:-1:-1;7209:36:181;;::::1;:48;::::0;;;;;;:55;;-1:-1:-1;;7209:55:181::1;::::0;;::::1;::::0;;7278:160;7166:35;;-1:-1:-1;7246:10:181;7350:13;;7330:10;;7278:160:::1;::::0;::::1;::::0;7307:13;;7373:11;;7166:35;;7278:160:::1;:::i;:::-;;;;;;;;7695:18;7664:27:::0;;;:15:::1;:27;::::0;;;;;::::1;;:49;::::0;::::1;;;;;;:::i;:::-;;7660:80;;7725:7;;;;;;;;5548:3108:::0;;;:::o;7660:80::-:1;8006:34:::0;;:38:::1;;::::0;;;;:104:::1;;;8076:13;:34;;;8056:54;;:16;:54;;;;8006:104;7993:653;;;8129:27;::::0;;;:15:::1;:27;::::0;;;;;;;;:53;;-1:-1:-1;;8129:53:181::1;8159:23;8129:53;::::0;;8226:20;;::::1;::::0;8286:15;;::::1;::::0;8315:22:::1;::::0;::::1;::::0;8351:16:::1;::::0;::::1;::::0;8206:173;;-1:-1:-1;;;8206:173:181;;-1:-1:-1;;;;;8206:66:181;;::::1;::::0;::::1;::::0;:173:::1;::::0;8286:15;8315:22;8351:16;8206:173:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;8192:446;;;::::0;;;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;8503:27:181::1;::::0;;;:15:::1;:27;::::0;;;;;:53;;-1:-1:-1;;8503:53:181::1;8533:23;8503:53;::::0;;8573:54;::::1;::::0;::::1;::::0;8503:27;;8611:8;;8573:54:::1;:::i;:::-;;;;;;;;8470:168;8192:446;;;8405:53;8431:10;8443:8;8453:4;8405:53;;;;;;;;:::i;:::-;;;;;;;;8192:446;7009:1643;5694:2962;;;;;;;1985:1;5548:3108:::0;;;:::o;930:252:87:-;2286:7:177;1336:6:71;-1:-1:-1;;;;;1336:6:71;561:10:87;:28;553:61;;;;-1:-1:-1;;;553:61:87;;27132:2:290;553:61:87;;;27114:21:290;27171:2;27151:18;;;27144:30;-1:-1:-1;;;27190:18:290;;;27183:50;27250:18;;553:61:87;26930:344:290;553:61:87;1066:12:::1;::::0;;1025::::1;1066::::0;;;::::1;::::0;::::1;::::0;;;-1:-1:-1;;;;;1043:7:87;::::1;::::0;1058:6;;1043:36:::1;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1024:55;;;1093:7;1085:37;;;::::0;-1:-1:-1;;;1085:37:87;;28639:2:290;1085:37:87::1;::::0;::::1;28621:21:290::0;28678:2;28658:18;;;28651:30;-1:-1:-1;;;28697:18:290;;;28690:47;28754:18;;1085:37:87::1;28437:341:290::0;1085:37:87::1;1134:43;::::0;11268:25:290;;;-1:-1:-1;;;;;1134:43:87;::::1;::::0;1154:10:::1;::::0;1134:43:::1;::::0;11256:2:290;11241:18;1134:43:87::1;;;;;;;1018:164;930:252:::0;;:::o;2096:188:71:-;1175:13;:11;:13::i;:::-;-1:-1:-1;;;;;2180:22:71;::::1;2172:73;;;::::0;-1:-1:-1;;;2172:73:71;;28985:2:290;2172:73:71::1;::::0;::::1;28967:21:290::0;29024:2;29004:18;;;28997:30;29063:34;29043:18;;;29036:62;-1:-1:-1;;;29114:18:290;;;29107:36;29160:19;;2172:73:71::1;28783:402:290::0;2172:73:71::1;2251:28;2270:8;2251:18;:28::i;3202:214:181:-:0;3315:4;3334:31;;;:22;:31;;;;;:77;;:53;;3397:13;3334:62;:77::i;:::-;3327:84;3202:214;-1:-1:-1;;;3202:214:181:o;587:122:64:-;426:23;:21;:23::i;:::-;676:28:::1;692:11;676:15;:28::i;4669:142:181:-:0;1175:13:71;:11;:13::i;:::-;4768:38:181::1;4789:16;4768:20;:38::i;1412:124:71:-:0;1314:7;1336:6;-1:-1:-1;;;;;1336:6:71;831:10:70;1471:23:71;1463:68;;;;-1:-1:-1;;;1463:68:71;;29392:2:290;1463:68:71;;;29374:21:290;;;29411:18;;;29404:30;29470:34;29450:18;;;29443:62;29522:18;;1463:68:71;29190:356:290;11856:2445:180;11974:9;11969:2328;11993:14;:21;11989:1;:25;11969:2328;;;12029:65;12097:14;12112:1;12097:17;;;;;;;;:::i;:::-;;;;;;;12029:85;;12201:1;-1:-1:-1;;;;;12140:63:180;:24;:49;;;-1:-1:-1;;;;;12140:63:180;;;:141;;;;-1:-1:-1;12217:50:180;;-1:-1:-1;;;;;12217:64:180;;;12140:141;12291:51;;;;;;;;;;;;;-1:-1:-1;;;12291:51:180;;;12123:227;;;;;-1:-1:-1;;;12123:227:180;;;;;;;;:::i;:::-;-1:-1:-1;12443:43:180;;;;;12358:50;12411:83;;;:22;:83;;;;;;12358:50;12579:905;12603:27;;12599:31;;12579:905;;;12647:47;12697:20;12718:1;12697:23;;;;;;;;:::i;:::-;;;;;;;;;12805:50;;12697:23;;;;;12746:45;;;;12697:23;;-1:-1:-1;;;;;;12746:109:180;;;:45;;:109;12731:745;;12955:49;;;;12895:44;;-1:-1:-1;;;;;12895:44:180;;;:109;;;12878:541;;13078:64;;;;;13031:111;;-1:-1:-1;;;;;;13031:111:180;-1:-1:-1;;;;;13031:111:180;;;;;;;;13257:50;;13198:43;;;;;13162:244;;9547:51:290;;;-1:-1:-1;;13162:244:180;;;;;13198:43;13162:244;;9520:18:290;13162:244:180;;;;;;;12878:541;13444:4;13430:18;;13460:5;;;12731:745;-1:-1:-1;12632:3:180;;;;:::i;:::-;;;;12579:905;;;;13497:11;13492:799;;13593:50;;13655:59;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;13655:59:180;-1:-1:-1;;;13655:59:180;;;13726:35;;;;;;;;;;;-1:-1:-1;;;13726:35:180;;;;13553:218;;13593:50;13553:28;:218::i;:::-;-1:-1:-1;13819:213:180;;;;;;;;13879:49;;;;;;-1:-1:-1;;;;;13819:213:180;;;;;13969:50;;13819:213;;;;;;;;13782:260;;;;;;;;-1:-1:-1;13782:260:180;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13782:260:180;;;;;;;;;;;;;;;;;;;;;;;;;;14145:50;;14090:43;;;;14207:49;;14058:224;;9565:32:290;;;9547:51;;13782:260:180;;14058:224;;;14090:43;;14058:224;;9520:18:290;14058:224:180;;;;;;;13492:799;12021:2276;;;12016:3;;;;;:::i;:::-;;;;11969:2328;;;;11856:2445;:::o;4464:190:246:-;4534:7;4549:44;4596:19;4603:11;4596:6;:19::i;:::-;4628:21;;;;4464:190;-1:-1:-1;;;4464:190:246:o;2227:172::-;2291:7;2306:38;2347:16;2354:8;2347:6;:16::i;1106:149:64:-;1314:7:71;1336:6;-1:-1:-1;;;;;1336:6:71;831:10:70;1167:23:64;;:53;;-1:-1:-1;537:9:64;;-1:-1:-1;;;;;537:9:64;831:10:70;1194:26:64;1167:53;1159:91;;;;-1:-1:-1;;;1159:91:64;;29753:2:290;1159:91:64;;;29735:21:290;29792:2;29772:18;;;29765:30;29831:27;29811:18;;;29804:55;29876:18;;1159:91:64;29551:349:290;4129:141:246;-1:-1:-1;;;;;;;;;;;;;;;;;4238:11:246;4227:38;;;;;;;;;;;;:::i;5188:160::-;5264:15;;:::i;:::-;5294:49;5315:11;:27;;;5294:20;:49::i;5583:153::-;5703:27;;;;;4891:22;;;;;5661:7;;5683:48;4805:113;10510:1214:180;10751:4;;;10804:878;10828:14;:21;10824:1;:25;10804:878;;;10865:12;10879:23;10906:14;10921:1;10906:17;;;;;;;;:::i;:::-;;;;;;;:52;;;-1:-1:-1;;;;;10906:74:180;11028:36;;;11078:14;11093:1;11078:17;;;;;;;;:::i;:::-;;;;;;;:42;;;11134:8;11156:18;11188;10992:226;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;10992:226:180;;;;;;;;;;;;;;-1:-1:-1;;;;;10992:226:180;-1:-1:-1;;;;;;10992:226:180;;;;;;;;;;10906:322;;;;10992:226;10906:322;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10864:364;;;;11241:7;11237:147;;;11285:4;11260:29;;11237:147;11640:7;11396:279;;11535:14;11550:1;11535:17;;;;;;;;:::i;:::-;;;;;;;:43;;;-1:-1:-1;;;;;11396:279:180;11459:10;11396:279;11436:13;11479:18;11507;11588:14;11603:1;11588:17;;;;;;;;:::i;:::-;;;;;;;:42;;;11657:10;11396:279;;;;;;;;;;:::i;:::-;;;;;;;;10856:826;;10851:3;;;;;:::i;:::-;;;;10804:878;;;-1:-1:-1;11696:22:180;10510:1214;-1:-1:-1;;;;;;;10510:1214:180:o;1419:269:246:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1592:8:246;1581:20;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1581:20:246;;;;;;1558:43;;;4891:22;;;;;;;1607:18;;;:48;:15;1419:269;-1:-1:-1;;1419:269:246:o;3603:307::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3802:11:246;3791:23;;;;;;;;:::i;10259:300:63:-;10322:16;10350:22;10375:19;10383:3;10375:7;:19::i;2428:173:71:-;2497:16;2516:6;;-1:-1:-1;;;;;2528:17:71;;;-1:-1:-1;;;;;;2528:17:71;;;;;;2556:40;;2516:6;;;;;;;2556:40;;2497:16;2556:40;2491:110;2428:173;:::o;15789:295:180:-;15874:9;15869:211;15893:7;:14;15889:1;:18;15869:211;;;15952:1;-1:-1:-1;;;;;15930:24:180;:7;15938:1;15930:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;15930:24:180;;;15956:21;;;;;;;;;;;;;-1:-1:-1;;;15956:21:180;;;15922:56;;;;;-1:-1:-1;;;15922:56:180;;;;;;;;:::i;:::-;;16017:8;15986:16;:28;16003:7;16011:1;16003:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;15986:28:180;-1:-1:-1;;;;;15986:28:180;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;16064:8;16038:35;;16052:7;16060:1;16052:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;16038:35:180;;;;;;;;;;;15909:3;;;;:::i;:::-;;;;15869:211;;1314:862:177;3489:13:80;;;;;;;3488:14;;3524:34;;;;-1:-1:-1;3542:12:80;;3557:1;3542:12;;;;:16;3524:34;3523:105;;;-1:-1:-1;3600:4:80;1513:19:69;:23;;;3572:55:80;;-1:-1:-1;3610:12:80;;;;;:17;3572:55;3508:182;;;;-1:-1:-1;;;3508:182:80;;;;;;;:::i;:::-;3696:12;:16;;-1:-1:-1;;3696:16:80;3711:1;3696:16;;;3718:55;;;;3746:13;:20;;-1:-1:-1;;3746:20:80;;;;;3718:55;1668:25:177::1;1687:5;1668:18;:25::i;:::-;1699;1715:8;1699:15;:25::i;:::-;1800:41;::::0;;1839:1:::1;1800:41:::0;;;::::1;::::0;::::1;::::0;;;1731:192:::1;::::0;1763:29;;1800:41;::::1;::::0;::::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;1800:41:177::1;;;;;;;;;;;;;;;;1889:28;1731:24;:192::i;:::-;2002:31;::::0;;2031:1:::1;2002:31:::0;;;::::1;::::0;::::1;::::0;;;1930:241:::1;::::0;1963:31;;2002;::::1;::::0;::::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;2002:31:177::1;;;;;;;;;;;;;;;-1:-1:-1::0;2105:16:177::1;::::0;;2119:1:::1;2105:16:::0;;::::1;::::0;::::1;::::0;;;2081;;1930:25:::1;:241::i;14445:1131:180:-:0;14562:9;14557:1015;14581:23;:30;14577:1;:34;14557:1015;;;14631:9;14626:940;14650:23;14674:1;14650:26;;;;;;;;:::i;:::-;;;;;;;:35;;;:42;14646:1;:46;14626:940;;;14709:50;14762:22;:82;14796:23;14820:1;14796:26;;;;;;;;:::i;:::-;;;;;;;:35;;;14832:1;14796:38;;;;;;;;:::i;:::-;;;;;;;14762:82;;;;;;;;;;;14709:135;;14860:9;14855:703;14879:27;;14875:31;;14855:703;;;15007:23;15031:1;15007:26;;;;;;;;:::i;:::-;;;;;;;:40;;;-1:-1:-1;;;;;14942:105:180;:20;14963:1;14942:23;;;;;;;;:::i;:::-;;;;;;;;;:49;:23;;;;;:49;;-1:-1:-1;;;;;14942:49:180;:105;14925:623;;15074:32;15109:20;15130:1;15109:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:48;15219:27;;-1:-1:-1;;;;;15109:48:180;;;;-1:-1:-1;15198:20:180;;15219:31;;15109:48;;15219:31;:::i;:::-;15198:53;;;;;;;;:::i;:::-;;;;;;;;;;;15172:20;15193:1;15172:23;;;;;;;;:::i;:::-;;;;;;;;;:79;;:23;;;;;:79;;-1:-1:-1;;;;;15172:79:180;;;-1:-1:-1;;;;;;15172:79:180;;;;;;-1:-1:-1;15172:79:180;;;;;;;;;;;;;;;;;;;;;;15265:26;;;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;15265:26:180;;;;;;;;;-1:-1:-1;;;;;;15265:26:180;;;;;;;;;;;;;;;;;;;15401;;:23;;15425:1;;15401:26;;;;;;:::i;:::-;;;;;;;:40;;;-1:-1:-1;;;;;15311:205:180;15347:23;15371:1;15347:26;;;;;;;;:::i;:::-;;;;;;;:35;;;15383:1;15347:38;;;;;;;;:::i;:::-;;;;;;;15311:205;15457:24;15311:205;;;;;-1:-1:-1;;;;;9565:32:290;;;;9547:51;;9535:2;9520:18;;9401:203;15311:205:180;;;;;;;;15530:5;;;14925:623;14908:3;;;;:::i;:::-;;;;14855:703;;;;14699:867;14694:3;;;;;:::i;:::-;;;;14626:940;;;-1:-1:-1;14613:3:180;;;;:::i;:::-;;;;14557:1015;;11294:1213:181;11444:9;11439:1064;11463:19;:26;11459:1;:30;11439:1064;;;11504:45;11552:19;11572:1;11552:22;;;;;;;;:::i;:::-;;;;;;;11504:70;;11621:1;-1:-1:-1;;;;;11590:33:181;:5;:19;;;-1:-1:-1;;;;;11590:33:181;;;11625:29;;;;;;;;;;;;;-1:-1:-1;;;11625:29:181;;;11582:73;;;;;-1:-1:-1;;;11582:73:181;;;;;;;;:::i;:::-;;11669:9;11664:833;11684:5;:14;;;:21;11680:1;:25;11664:833;;;11722:20;11756:9;11752:599;;;11779:39;11800:5;:14;;;11815:1;11800:17;;;;;;;;:::i;:::-;;;;;;;11779:16;:20;;:39;;;;:::i;:::-;;11848:112;11929:5;:19;;;11848:22;:41;11871:5;:14;;;11886:1;11871:17;;;;;;;;:::i;:::-;;;;;;;11848:41;;;;;;;;;;;:63;;:67;;:112;;;;:::i;:::-;11830:130;;11752:599;;;12007:115;12091:5;:19;;;12007:22;:41;12030:5;:14;;;12045:1;12030:17;;;;;;;;:::i;:::-;;;;;;;12007:41;;;;;;;;;;;:63;;:70;;:115;;;;:::i;:::-;11989:133;;12151:15;:108;;;;;12182:72;:22;:41;12205:5;:14;;;12220:1;12205:17;;;;;;;;:::i;:::-;;;;;;;12182:41;;;;;;;;;;;:63;;:70;:72::i;:::-;:77;12151:108;12134:207;;;12286:42;12310:5;:14;;;12325:1;12310:17;;;;;;;;:::i;:::-;;;;;;;12286:16;:23;;:42;;;;:::i;:::-;;12134:207;12364:15;12360:129;;;12460:5;:14;;;12475:1;12460:17;;;;;;;;:::i;:::-;;;;;;;12449:9;12398:80;;12428:5;:19;;;-1:-1:-1;;;;;12398:80:181;;;;;;;;;;;12360:129;-1:-1:-1;11707:3:181;;;;:::i;:::-;;;;11664:833;;;;11496:1007;11491:3;;;;;:::i;:::-;;;;11439:1064;;9482:689;9612:9;9607:560;9627:26;:33;9623:1;:37;9607:560;;;9675:35;9713:26;9740:1;9713:29;;;;;;;;:::i;:::-;;;;;;;;;;;;9826:13;;9803:37;;;;:22;:37;;;;;:69;9767:23;;;;9713:29;;-1:-1:-1;;;;;;9803:69:181;;;;;;9767:105;;;:161;;;;;9913:15;9886:5;:23;;;-1:-1:-1;;;;;9886:42:181;;;9767:161;9938:33;;;;;;;;;;;;;-1:-1:-1;;;9938:33:181;;;9750:229;;;;;-1:-1:-1;;;9750:229:181;;;;;;;;:::i;:::-;-1:-1:-1;10059:32:181;;;;;;10010:13;;9987:37;;;;:22;:37;;;;;;;:104;;-1:-1:-1;;;;;;9987:104:181;;-1:-1:-1;;;;;9987:104:181;;;;;;;10146:13;;10121:23;;10105:55;;32824:45:290;;32806:64;;10146:13:181;;10105:55;;32779:18:290;10105:55:181;;;;;;;-1:-1:-1;9662:3:181;;;;:::i;:::-;;;;9607:560;;1405:154:73;1510:43;;;-1:-1:-1;;;;;33073:32:290;;1510:43:73;;;33055:51:290;33122:18;;;;33115:34;;;1510:43:73;;;;;;;;;;33028:18:290;;;;1510:43:73;;;;;;;;-1:-1:-1;;;;;1510:43:73;-1:-1:-1;;;1510:43:73;;;1483:71;;1503:5;;1483:19;:71::i;8860:165:63:-;-1:-1:-1;;;;;8993:23:63;;8940:4;4351:19;;;:12;;;:19;;;;;;:24;;8963:55;4255:127;814:178:64;897:9;;;-1:-1:-1;;;;;912:23:64;;;-1:-1:-1;;;;;;912:23:64;;;;;;;946:41;;;897:9;;;;33372:34:290;;;33437:2;33422:18;;33415:43;;;;946:41:64;;33307:18:290;946:41:64;33160:304:290;10402:714:181;10497:9;10492:620;10512:16;:23;10508:1;:27;10492:620;;;10550:38;10591:16;10608:1;10591:19;;;;;;;;:::i;:::-;;;;;;;10550:60;;10673:1;10635:13;:35;;;:39;;;:178;;;;-1:-1:-1;10760:21:181;;10737:45;;;;:22;:45;;;;;:76;;:67;;:74;:76::i;:::-;10688:13;:35;;;:125;;;;10635:178;10823:37;;;;;;;;;;;;;-1:-1:-1;;;10823:37:181;;;10618:250;;;;;-1:-1:-1;;;10618:250:181;;;;;;;;:::i;:::-;-1:-1:-1;10977:35:181;;;;;;10899:21;;10876:45;;;;:22;:45;;;;;;;:136;;-1:-1:-1;;10876:136:181;;;;;;;;11083:21;;11046:35;;11025:80;;26901:17:290;;26883:36;;11083:21:181;;11025:80;;26856:18:290;11025:80:181;;;;;;;-1:-1:-1;10537:3:181;;;;:::i;:::-;;;;10492:620;;6603:301:69;6730:12;6751;6765:23;6792:6;-1:-1:-1;;;;;6792:19:69;6812:4;6792:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6750:67;;;;6830:69;6857:6;6865:7;6874:10;6886:12;6830:26;:69::i;:::-;6823:76;6603:301;-1:-1:-1;;;;;;6603:301:69:o;1893:129:246:-;1955:15;;:::i;:::-;1996:8;1985:32;;;;;;;;;;;;:::i;5570:109:63:-;5626:16;5661:3;:11;;5654:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5570:109;;;:::o;12592:525:181:-;12956:52;12986:15;13003:4;12956:29;:52::i;:::-;13014:54;13044:16;13062:5;13014:29;:54::i;:::-;13074:38;13095:16;13074:20;:38::i;16169:426:180:-;16418:38;16440:15;16418:21;:38::i;:::-;16462:40;16485:16;16462:22;:40::i;:::-;16508:37;16523:15;16540:4;16508:14;:37::i;:::-;16551:39;16566:16;16584:5;16551:14;:39::i;:::-;16169:426;;;;:::o;10793:129:63:-;10860:4;10883:32;10888:3;10908:5;10883:4;:32::i;8305:150::-;8375:4;8398:50;8403:3;-1:-1:-1;;;;;8423:23:63;;8398:4;:50::i;8623:156::-;8696:4;8719:53;8727:3;-1:-1:-1;;;;;8747:23:63;;8719:7;:53::i;9106:115::-;9169:7;9195:19;9203:3;4545:18;;4463:107;11090:135;11160:4;11183:35;11191:3;11211:5;11183:7;:35::i;4628:597:73:-;5031:23;5057:33;-1:-1:-1;;;;;5057:27:73;;5085:4;5057:27;:33::i;:::-;5031:59;;5100:10;:17;5121:1;5100:22;;:57;;;;;5138:10;5127:30;;;;;;;;;;;;:::i;:::-;5126:31;5100:57;5096:125;;;5174:40;;-1:-1:-1;;;5174:40:73;;-1:-1:-1;;;;;9565:32:290;;5174:40:73;;;9547:51:290;9520:18;;5174:40:73;9401:203:290;7178:548:69;7340:12;7364:7;7360:362;;;7385:10;:17;7406:1;7385:22;7381:256;;-1:-1:-1;;;;;1513:19:69;;;7568:60;;;;-1:-1:-1;;;7568:60:69;;35170:2:290;7568:60:69;;;35152:21:290;35209:2;35189:18;;;35182:30;35248:31;35228:18;;;35221:59;35297:18;;7568:60:69;34968:353:290;7568:60:69;-1:-1:-1;7651:10:69;7644:17;;7360:362;7682:33;7690:10;7702:12;7682:7;:33::i;:::-;7178:548;;;;;;:::o;2214:404:63:-;2277:4;4351:19;;;:12;;;:19;;;;;;2293:319;;-1:-1:-1;2335:23:63;;;;;;;;:11;:23;;;;;;;;;;;;;2515:18;;2493:19;;;:12;;;:19;;;;;;:40;;;;2547:11;;2293:319;-1:-1:-1;2596:5:63;2589:12;;2786:1388;2852:4;2989:19;;;:12;;;:19;;;;;;3023:15;;3019:1149;;3392:21;3416:14;3429:1;3416:10;:14;:::i;:::-;3464:18;;3392:38;;-1:-1:-1;3444:17:63;;3464:22;;3485:1;;3464:22;:::i;:::-;3444:42;;3518:13;3505:9;:26;3501:398;;3551:17;3571:3;:11;;3583:9;3571:22;;;;;;;;:::i;:::-;;;;;;;;;3551:42;;3722:9;3693:3;:11;;3705:13;3693:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3805:23;;;:12;;;:23;;;;;:36;;;3501:398;3977:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4069:3;:12;;:19;4082:5;4069:19;;;;;;;;;;;4062:26;;;4110:4;4103:11;;;;;;;3019:1149;4152:5;4145:12;;;;;3426:179:69;3501:12;3528:72;3550:6;3558:4;3564:1;3528:72;;;;;;;;;;;;;;;;;:21;:72::i;8192:476::-;8343:17;;:21;8339:325;;8545:10;8539:17;8593:15;8580:10;8576:2;8572:19;8565:44;8339:325;8644:12;8637:20;;-1:-1:-1;;;8637:20:69;;;;;;;;:::i;4822:414::-;4969:12;5022:5;4997:21;:30;;4989:81;;;;-1:-1:-1;;;4989:81:69;;35528:2:290;4989:81:69;;;35510:21:290;35567:2;35547:18;;;35540:30;35606:34;35586:18;;;35579:62;-1:-1:-1;;;35657:18:290;;;35650:36;35703:19;;4989:81:69;35326:402:290;4989:81:69;5077:12;5091:23;5118:6;-1:-1:-1;;;;;5118:11:69;5137:5;5144:4;5118:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5076:73;;;;5162:69;5189:6;5197:7;5206:10;5218:12;5162:26;:69::i;:::-;5155:76;4822:414;-1:-1:-1;;;;;;;4822:414:69:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:127:290:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:253;218:2;212:9;260:4;248:17;;-1:-1:-1;;;;;280:34:290;;316:22;;;277:62;274:88;;;342:18;;:::i;:::-;378:2;371:22;146:253;:::o;404:257::-;476:4;470:11;;;508:17;;-1:-1:-1;;;;;540:34:290;;576:22;;;537:62;534:88;;;602:18;;:::i;666:253::-;738:2;732:9;780:4;768:17;;-1:-1:-1;;;;;800:34:290;;836:22;;;797:62;794:88;;;862:18;;:::i;924:275::-;995:2;989:9;1060:2;1041:13;;-1:-1:-1;;1037:27:290;1025:40;;-1:-1:-1;;;;;1080:34:290;;1116:22;;;1077:62;1074:88;;;1142:18;;:::i;:::-;1178:2;1171:22;924:275;;-1:-1:-1;924:275:290:o;1204:216::-;1297:4;-1:-1:-1;;;;;1322:6:290;1319:30;1316:56;;;1352:18;;:::i;:::-;-1:-1:-1;1397:1:290;1393:14;1409:4;1389:25;;1204:216::o;1425:131::-;-1:-1:-1;;;;;1500:31:290;;1490:42;;1480:70;;1546:1;1543;1536:12;1561:134;1629:20;;1658:31;1629:20;1658:31;:::i;:::-;1561:134;;;:::o;1700:1271::-;1787:5;1840:3;1833:4;1825:6;1821:17;1817:27;1807:55;;1858:1;1855;1848:12;1807:55;1894:6;1881:20;1920:4;1944:93;1960:76;2033:2;1960:76;:::i;:::-;1944:93;:::i;:::-;2071:15;;;2133:4;2176:11;;;2164:24;;2160:33;;;2102:12;;;;2059:3;2205:15;;;2202:35;;;2233:1;2230;2223:12;2202:35;2269:2;2261:6;2257:15;2281:661;2297:6;2292:3;2289:15;2281:661;;;2373:2;2367:3;2362;2358:13;2354:22;2351:112;;;2417:1;2446:2;2442;2435:14;2351:112;2489:22;;:::i;:::-;2552:3;2539:17;2569:33;2594:7;2569:33;:::i;:::-;2615:22;;2678:12;;;2665:26;2704:33;2665:26;2704:33;:::i;:::-;2757:14;;;2750:31;2804:2;2855:12;;;2842:26;2826:14;;;2819:50;2882:18;;2920:12;;;;2314;;2281:661;;;-1:-1:-1;2960:5:290;;1700:1271;-1:-1:-1;;;;;;;1700:1271:290:o;2976:433::-;3112:6;3165:2;3153:9;3144:7;3140:23;3136:32;3133:52;;;3181:1;3178;3171:12;3133:52;3221:9;3208:23;-1:-1:-1;;;;;3246:6:290;3243:30;3240:50;;;3286:1;3283;3276:12;3240:50;3309:94;3395:7;3386:6;3375:9;3371:22;3309:94;:::i;3414:186::-;3462:4;-1:-1:-1;;;;;3487:6:290;3484:30;3481:56;;;3517:18;;:::i;:::-;-1:-1:-1;3583:2:290;3562:15;-1:-1:-1;;3558:29:290;3589:4;3554:40;;3414:186::o;3605:462::-;3647:5;3700:3;3693:4;3685:6;3681:17;3677:27;3667:55;;3718:1;3715;3708:12;3667:55;3754:6;3741:20;3785:48;3801:31;3829:2;3801:31;:::i;3785:48::-;3858:2;3849:7;3842:19;3904:3;3897:4;3892:2;3884:6;3880:15;3876:26;3873:35;3870:55;;;3921:1;3918;3911:12;3870:55;3986:2;3979:4;3971:6;3967:17;3960:4;3951:7;3947:18;3934:55;4034:1;4009:16;;;4027:4;4005:27;3998:38;;;;4013:7;3605:462;-1:-1:-1;;;3605:462:290:o;4072:671::-;4161:6;4214:2;4202:9;4193:7;4189:23;4185:32;4182:52;;;4230:1;4227;4220:12;4182:52;4270:9;4257:23;-1:-1:-1;;;;;4340:2:290;4332:6;4329:14;4326:34;;;4356:1;4353;4346:12;4326:34;4379:22;;;;4435:4;4417:16;;;4413:27;4410:47;;;4453:1;4450;4443:12;4410:47;4479:22;;:::i;:::-;4537:2;4524:16;4517:5;4510:31;4587:2;4583;4579:11;4566:25;4616:2;4606:8;4603:16;4600:36;;;4632:1;4629;4622:12;4600:36;4668:44;4704:7;4693:8;4689:2;4685:17;4668:44;:::i;:::-;4663:2;4652:14;;4645:68;-1:-1:-1;4656:5:290;4072:671;-1:-1:-1;;;;;4072:671:290:o;4975:320::-;4849:12;;4863:4;4845:23;4833:36;;4922:4;4911:16;;;4905:23;-1:-1:-1;;;;;4901:62:290;4885:14;;;4878:86;5209:2;5194:18;;5221:68;4748:222;5300:820;5355:5;5403:4;5391:9;5386:3;5382:19;5378:30;5375:50;;;5421:1;5418;5411:12;5375:50;5443:22;;:::i;:::-;5434:31;;5501:9;5488:23;5481:5;5474:38;5564:2;5553:9;5549:18;5536:32;5577:33;5602:7;5577:33;:::i;:::-;5637:2;5626:14;;5619:31;5702:2;5687:18;;5674:32;5715:33;5674:32;5715:33;:::i;:::-;5780:7;5775:2;5768:5;5764:14;5757:31;;5848:2;5837:9;5833:18;5820:32;5815:2;5808:5;5804:14;5797:56;5914:3;5903:9;5899:19;5886:33;5880:3;5873:5;5869:15;5862:58;5971:3;5960:9;5956:19;5943:33;-1:-1:-1;;;;;5991:6:290;5988:30;5985:50;;;6031:1;6028;6021:12;5985:50;6068:45;6109:3;6100:6;6089:9;6085:22;6068:45;:::i;:::-;6062:3;6055:5;6051:15;6044:70;;5300:820;;;;:::o;6125:348::-;6211:6;6264:2;6252:9;6243:7;6239:23;6235:32;6232:52;;;6280:1;6277;6270:12;6232:52;6320:9;6307:23;-1:-1:-1;;;;;6345:6:290;6342:30;6339:50;;;6385:1;6382;6375:12;6339:50;6408:59;6459:7;6450:6;6439:9;6435:22;6408:59;:::i;6478:180::-;6537:6;6590:2;6578:9;6569:7;6565:23;6561:32;6558:52;;;6606:1;6603;6596:12;6558:52;-1:-1:-1;6629:23:290;;6478:180;-1:-1:-1;6478:180:290:o;6663:874::-;6910:2;6962:21;;;7032:13;;6935:18;;;7054:22;;;6881:4;;6910:2;7095;;7113:18;;;;7154:15;;;6881:4;7197:314;7211:6;7208:1;7205:13;7197:314;;;7270:13;;7354:9;;-1:-1:-1;;;;;7350:18:290;;;7338:31;;7413:11;;;7407:18;7403:27;7389:12;;;7382:49;7451:12;;;;7486:15;;;;7323:1;7226:9;7197:314;;;-1:-1:-1;7528:3:290;;6663:874;-1:-1:-1;;;;;;;6663:874:290:o;7542:247::-;7601:6;7654:2;7642:9;7633:7;7629:23;7625:32;7622:52;;;7670:1;7667;7660:12;7622:52;7709:9;7696:23;7728:31;7753:5;7728:31;:::i;7986:770::-;8040:5;8093:3;8086:4;8078:6;8074:17;8070:27;8060:55;;8111:1;8108;8101:12;8060:55;8147:6;8134:20;8173:4;8197:93;8213:76;8286:2;8213:76;:::i;8197:93::-;8324:15;;;8410:1;8406:10;;;;8394:23;;8390:32;;;8355:12;;;;8434:15;;;8431:35;;;8462:1;8459;8452:12;8431:35;8498:2;8490:6;8486:15;8510:217;8526:6;8521:3;8518:15;8510:217;;;8606:3;8593:17;8623:31;8648:5;8623:31;:::i;:::-;8667:18;;8705:12;;;;8543;;8510:217;;;-1:-1:-1;8745:5:290;7986:770;-1:-1:-1;;;;;;7986:770:290:o;8761:635::-;8872:6;8880;8888;8941:2;8929:9;8920:7;8916:23;8912:32;8909:52;;;8957:1;8954;8947:12;8909:52;8997:9;8984:23;-1:-1:-1;;;;;9067:2:290;9059:6;9056:14;9053:34;;;9083:1;9080;9073:12;9053:34;9106:49;9147:7;9138:6;9127:9;9123:22;9106:49;:::i;:::-;9096:59;;9202:2;9191:9;9187:18;9174:32;9164:42;;9259:2;9248:9;9244:18;9231:32;9215:48;;9288:2;9278:8;9275:16;9272:36;;;9304:1;9301;9294:12;9272:36;;9327:63;9382:7;9371:8;9360:9;9356:24;9327:63;:::i;:::-;9317:73;;;8761:635;;;;;:::o;9609:592::-;9704:6;9712;9720;9728;9781:3;9769:9;9760:7;9756:23;9752:33;9749:53;;;9798:1;9795;9788:12;9749:53;9834:9;9821:23;9811:33;;9894:2;9883:9;9879:18;9866:32;9907:31;9932:5;9907:31;:::i;:::-;9957:5;-1:-1:-1;10009:2:290;9994:18;;9981:32;;-1:-1:-1;10064:2:290;10049:18;;10036:32;-1:-1:-1;;;;;10080:30:290;;10077:50;;;10123:1;10120;10113:12;10077:50;10146:49;10187:7;10178:6;10167:9;10163:22;10146:49;:::i;:::-;10136:59;;;9609:592;;;;;;;:::o;10459:658::-;10630:2;10682:21;;;10752:13;;10655:18;;;10774:22;;;10601:4;;10630:2;10853:15;;;;10827:2;10812:18;;;10601:4;10896:195;10910:6;10907:1;10904:13;10896:195;;;10975:13;;-1:-1:-1;;;;;10971:39:290;10959:52;;11066:15;;;;11031:12;;;;11007:1;10925:9;10896:195;;;-1:-1:-1;11108:3:290;;10459:658;-1:-1:-1;;;;;;10459:658:290:o;11609:348::-;11693:6;11746:2;11734:9;11725:7;11721:23;11717:32;11714:52;;;11762:1;11759;11752:12;11714:52;11802:9;11789:23;-1:-1:-1;;;;;11827:6:290;11824:30;11821:50;;;11867:1;11864;11857:12;11821:50;11890:61;11943:7;11934:6;11923:9;11919:22;11890:61;:::i;11962:315::-;12030:6;12038;12091:2;12079:9;12070:7;12066:23;12062:32;12059:52;;;12107:1;12104;12097:12;12059:52;12143:9;12130:23;12120:33;;12203:2;12192:9;12188:18;12175:32;12216:31;12241:5;12216:31;:::i;:::-;12266:5;12256:15;;;11962:315;;;;;:::o;12282:1162::-;12353:5;12406:3;12399:4;12391:6;12387:17;12383:27;12373:55;;12424:1;12421;12414:12;12373:55;12460:6;12447:20;12486:4;12510:93;12526:76;12599:2;12526:76;:::i;12510:93::-;12637:15;;;12723:1;12719:10;;;;12707:23;;12703:32;;;12668:12;;;;12747:15;;;12744:35;;;12775:1;12772;12765:12;12744:35;12811:2;12803:6;12799:15;12823:592;12839:6;12834:3;12831:15;12823:592;;;12917:4;12911:3;12906;12902:13;12898:24;12895:114;;;12963:1;12992:2;12988;12981:14;12895:114;13035:22;;:::i;:::-;13097:3;13084:17;13077:5;13070:32;13152:2;13147:3;13143:12;13130:26;13204:4;13195:7;13191:18;13182:7;13179:31;13169:129;;13252:1;13281:2;13277;13270:14;13169:129;13318:14;;;13311:31;13355:18;;13393:12;;;;12865:4;12856:14;12823:592;;13449:2242;13560:5;13589:97;13605:80;13678:6;13605:80;:::i;13589:97::-;13720:21;;;13580:106;-1:-1:-1;13760:4:290;13780:14;;;;13813:1;13849:15;;;13837:28;;13877:15;;;13874:35;;;13905:1;13902;13895:12;13874:35;13929:6;13944:1741;13960:6;13955:3;13952:15;13944:1741;;;14046:3;14033:17;-1:-1:-1;;;;;14123:2:290;14110:11;14107:19;14104:109;;;14167:1;14196:2;14192;14185:14;14104:109;14236:24;;;;14294:4;14280:12;;;14276:23;14273:113;;;14340:1;14369:2;14365;14358:14;14273:113;14412:22;;:::i;:::-;14475:2;14462:16;14491:33;14516:7;14491:33;:::i;:::-;14537:22;;14601:11;;;14588:25;14629:16;;;14626:106;;;14686:1;14715:2;14711;14704:14;14626:106;14763:8;14759:2;14755:17;14745:27;;;14814:3;14807:4;14803:2;14799:13;14795:23;14785:121;;14860:1;14850:11;;14889:2;14885;14878:14;14785:121;14943:2;14930:16;14919:27;;14972:94;14988:77;15061:3;14988:77;:::i;14972:94::-;15110:18;;;15205:12;;;15197:21;;15193:30;;;15150:14;;;;15239:17;;;15236:110;;;15298:1;15328:3;15323;15316:16;15236:110;15372:11;;;;15396:174;15414:8;15407:5;15404:19;15396:174;;;15496:19;;15482:34;;15435:14;;;;15542;;;;15396:174;;;15590:14;;;15583:29;-1:-1:-1;15625:18:290;;-1:-1:-1;;15663:12:290;;;;13977;;13944:1741;;;13948:3;;;;;13449:2242;;;;;:::o;15696:308::-;15782:5;15835:3;15828:4;15820:6;15816:17;15812:27;15802:55;;15853:1;15850;15843:12;15802:55;15875:123;15994:3;15985:6;15972:20;15965:4;15957:6;15953:17;15875:123;:::i;16009:1419::-;16352:6;16360;16368;16376;16384;16392;16445:3;16433:9;16424:7;16420:23;16416:33;16413:53;;;16462:1;16459;16452:12;16413:53;16485:29;16504:9;16485:29;:::i;:::-;16475:39;;16533:38;16567:2;16556:9;16552:18;16533:38;:::i;:::-;16523:48;;16622:2;16611:9;16607:18;16594:32;-1:-1:-1;;;;;16686:2:290;16678:6;16675:14;16672:34;;;16702:1;16699;16692:12;16672:34;16725:78;16795:7;16786:6;16775:9;16771:22;16725:78;:::i;:::-;16715:88;;16856:2;16845:9;16841:18;16828:32;16812:48;;16885:2;16875:8;16872:16;16869:36;;;16901:1;16898;16891:12;16869:36;16924:95;17011:7;17000:8;16989:9;16985:24;16924:95;:::i;:::-;16914:105;;17072:3;17061:9;17057:19;17044:33;17028:49;;17102:2;17092:8;17089:16;17086:36;;;17118:1;17115;17108:12;17086:36;17141:96;17229:7;17218:8;17207:9;17203:24;17141:96;:::i;:::-;17131:106;;17290:3;17279:9;17275:19;17262:33;17246:49;;17320:2;17310:8;17307:16;17304:36;;;17336:1;17333;17326:12;17304:36;;17359:63;17414:7;17403:8;17392:9;17388:24;17359:63;:::i;:::-;17349:73;;;16009:1419;;;;;;;;:::o;17433:550::-;17558:6;17611:2;17599:9;17590:7;17586:23;17582:32;17579:52;;;17627:1;17624;17617:12;17579:52;17667:9;17654:23;-1:-1:-1;;;;;17692:6:290;17689:30;17686:50;;;17732:1;17729;17722:12;17686:50;17755:22;;17808:4;17800:13;;17796:27;-1:-1:-1;17786:55:290;;17837:1;17834;17827:12;17786:55;17860:117;17969:7;17964:2;17951:16;17946:2;17942;17938:11;17860:117;:::i;18173:431::-;18308:6;18361:2;18349:9;18340:7;18336:23;18332:32;18329:52;;;18377:1;18374;18367:12;18329:52;18417:9;18404:23;-1:-1:-1;;;;;18442:6:290;18439:30;18436:50;;;18482:1;18479;18472:12;18436:50;18505:93;18590:7;18581:6;18570:9;18566:22;18505:93;:::i;18609:416::-;18704:6;18712;18765:2;18753:9;18744:7;18740:23;18736:32;18733:52;;;18781:1;18778;18771:12;18733:52;18821:9;18808:23;-1:-1:-1;;;;;18846:6:290;18843:30;18840:50;;;18886:1;18883;18876:12;18840:50;18909:59;18960:7;18951:6;18940:9;18936:22;18909:59;:::i;:::-;18899:69;19015:2;19000:18;;;;18987:32;;-1:-1:-1;;;;18609:416:290:o;19212:1447::-;19337:6;19368:2;19411;19399:9;19390:7;19386:23;19382:32;19379:52;;;19427:1;19424;19417:12;19379:52;19467:9;19454:23;-1:-1:-1;;;;;19492:6:290;19489:30;19486:50;;;19532:1;19529;19522:12;19486:50;19555:22;;19608:4;19600:13;;19596:27;-1:-1:-1;19586:55:290;;19637:1;19634;19627:12;19586:55;19673:2;19660:16;19696:93;19712:76;19785:2;19712:76;:::i;19696:93::-;19823:15;;;19905:1;19901:10;;;;19893:19;;19889:28;;;19854:12;;;;19929:19;;;19926:39;;;19961:1;19958;19951:12;19926:39;19985:11;;;;20005:624;20021:6;20016:3;20013:15;20005:624;;;20103:4;20097:3;20088:7;20084:17;20080:28;20077:118;;;20149:1;20178:2;20174;20167:14;20077:118;20221:22;;:::i;:::-;20283:3;20270:17;20263:5;20256:32;20338:2;20333:3;20329:12;20316:26;-1:-1:-1;;;;;20381:7:290;20377:46;20368:7;20365:59;20355:157;;20466:1;20495:2;20491;20484:14;20355:157;20532:14;;;20525:31;20569:18;;20047:4;20038:14;;;;;20607:12;;;;20005:624;;20664:456;20741:6;20749;20757;20810:2;20798:9;20789:7;20785:23;20781:32;20778:52;;;20826:1;20823;20816:12;20778:52;20865:9;20852:23;20884:31;20909:5;20884:31;:::i;:::-;20934:5;-1:-1:-1;20991:2:290;20976:18;;20963:32;21004:33;20963:32;21004:33;:::i;:::-;20664:456;;21056:7;;-1:-1:-1;;;21110:2:290;21095:18;;;;21082:32;;20664:456::o;21125:127::-;21186:10;21181:3;21177:20;21174:1;21167:31;21217:4;21214:1;21207:15;21241:4;21238:1;21231:15;21257:347;21408:2;21393:18;;21441:1;21430:13;;21420:144;;21486:10;21481:3;21477:20;21474:1;21467:31;21521:4;21518:1;21511:15;21549:4;21546:1;21539:15;21420:144;21573:25;;;21257:347;:::o;21609:632::-;21780:2;21832:21;;;21902:13;;21805:18;;;21924:22;;;21751:4;;21780:2;22003:15;;;;21977:2;21962:18;;;21751:4;22046:169;22060:6;22057:1;22054:13;22046:169;;;22121:13;;22109:26;;22190:15;;;;22155:12;;;;22082:1;22075:9;22046:169;;22246:388;22323:6;22331;22384:2;22372:9;22363:7;22359:23;22355:32;22352:52;;;22400:1;22397;22390:12;22352:52;22440:9;22427:23;-1:-1:-1;;;;;22465:6:290;22462:30;22459:50;;;22505:1;22502;22495:12;22459:50;22528:49;22569:7;22560:6;22549:9;22545:22;22528:49;:::i;22639:315::-;22707:6;22715;22768:2;22756:9;22747:7;22743:23;22739:32;22736:52;;;22784:1;22781;22774:12;22736:52;22823:9;22810:23;22842:31;22867:5;22842:31;:::i;:::-;22892:5;22944:2;22929:18;;;;22916:32;;-1:-1:-1;;;22639:315:290:o;22959:401::-;23079:6;23132:2;23120:9;23111:7;23107:23;23103:32;23100:52;;;23148:1;23145;23138:12;23100:52;23188:9;23175:23;-1:-1:-1;;;;;23213:6:290;23210:30;23207:50;;;23253:1;23250;23243:12;23207:50;23276:78;23346:7;23337:6;23326:9;23322:22;23276:78;:::i;23365:250::-;23450:1;23460:113;23474:6;23471:1;23468:13;23460:113;;;23550:11;;;23544:18;23531:11;;;23524:39;23496:2;23489:10;23460:113;;;-1:-1:-1;;23607:1:290;23589:16;;23582:27;23365:250::o;23620:271::-;23662:3;23700:5;23694:12;23727:6;23722:3;23715:19;23743:76;23812:6;23805:4;23800:3;23796:14;23789:4;23782:5;23778:16;23743:76;:::i;:::-;23873:2;23852:15;-1:-1:-1;;23848:29:290;23839:39;;;;23880:4;23835:50;;23620:271;-1:-1:-1;;23620:271:290:o;23896:220::-;24045:2;24034:9;24027:21;24008:4;24065:45;24106:2;24095:9;24091:18;24083:6;24065:45;:::i;24121:386::-;24353:1;24349;24344:3;24340:11;24336:19;24328:6;24324:32;24313:9;24306:51;24393:6;24388:2;24377:9;24373:18;24366:34;24436:2;24431;24420:9;24416:18;24409:30;24287:4;24456:45;24497:2;24486:9;24482:18;24474:6;24456:45;:::i;:::-;24448:53;24121:386;-1:-1:-1;;;;;24121:386:290:o;24512:577::-;24599:5;24593:12;24588:3;24581:25;24563:3;24652:4;24645:5;24641:16;24635:23;24694:1;24690;24685:3;24681:11;24677:19;24746:2;24732:12;24728:21;24721:4;24716:3;24712:14;24705:45;24811:2;24803:4;24796:5;24792:16;24786:23;24782:32;24775:4;24770:3;24766:14;24759:56;;;24864:4;24857:5;24853:16;24847:23;24840:4;24835:3;24831:14;24824:47;24920:4;24913:5;24909:16;24903:23;24896:4;24891:3;24887:14;24880:47;24975:4;24968:5;24964:16;24958:23;25013:4;25006;25001:3;24997:14;24990:28;25034:49;25077:4;25072:3;25068:14;25052;25034:49;:::i;25094:415::-;25327:6;25316:9;25309:25;25370:2;25365;25354:9;25350:18;25343:30;25290:4;25390:54;25440:2;25429:9;25425:18;25417:6;25390:54;:::i;:::-;25382:62;;25494:6;25487:14;25480:22;25475:2;25464:9;25460:18;25453:50;25094:415;;;;;;:::o;25514:127::-;25575:10;25570:3;25566:20;25563:1;25556:31;25606:4;25603:1;25596:15;25630:4;25627:1;25620:15;25646:125;25711:9;;;25732:10;;;25729:36;;;25745:18;;:::i;25776:127::-;25837:10;25832:3;25828:20;25825:1;25818:31;25868:4;25865:1;25858:15;25892:4;25889:1;25882:15;25908:135;25947:3;25968:17;;;25965:43;;25988:18;;:::i;:::-;-1:-1:-1;26035:1:290;26024:13;;25908:135::o;26048:263::-;26231:2;26220:9;26213:21;26194:4;26251:54;26301:2;26290:9;26286:18;26278:6;26251:54;:::i;26316:410::-;26518:2;26500:21;;;26557:2;26537:18;;;26530:30;26596:34;26591:2;26576:18;;26569:62;-1:-1:-1;;;26662:2:290;26647:18;;26640:44;26716:3;26701:19;;26316:410::o;27279:175::-;27316:3;27360:4;27353:5;27349:16;27389:4;27380:7;27377:17;27374:43;;27397:18;;:::i;:::-;27446:1;27433:15;;27279:175;-1:-1:-1;;27279:175:290:o;27459:255::-;27549:5;27543:12;27538:3;27531:25;27513:3;27602:4;27595:5;27591:16;27585:23;27640:4;27633;27628:3;27624:14;27617:28;27661:47;27702:4;27697:3;27693:14;27679:12;27661:47;:::i;27719:421::-;27960:6;27949:9;27942:25;28003:2;27998;27987:9;27983:18;27976:30;27923:4;28023:57;28076:2;28065:9;28061:18;28053:6;28023:57;:::i;:::-;28015:65;;28128:4;28120:6;28116:17;28111:2;28100:9;28096:18;28089:45;27719:421;;;;;;:::o;28145:287::-;28274:3;28312:6;28306:13;28328:66;28387:6;28382:3;28375:4;28367:6;28363:17;28328:66;:::i;:::-;28410:16;;;;;28145:287;-1:-1:-1;;28145:287:290:o;29905:441::-;29958:5;30011:3;30004:4;29996:6;29992:17;29988:27;29978:55;;30029:1;30026;30019:12;29978:55;30058:6;30052:13;30089:48;30105:31;30133:2;30105:31;:::i;30089:48::-;30162:2;30153:7;30146:19;30208:3;30201:4;30196:2;30188:6;30184:15;30180:26;30177:35;30174:55;;;30225:1;30222;30215:12;30174:55;30238:77;30312:2;30305:4;30296:7;30292:18;30285:4;30277:6;30273:17;30238:77;:::i;30351:672::-;30451:6;30504:2;30492:9;30483:7;30479:23;30475:32;30472:52;;;30520:1;30517;30510:12;30472:52;30553:9;30547:16;-1:-1:-1;;;;;30623:2:290;30615:6;30612:14;30609:34;;;30639:1;30636;30629:12;30609:34;30662:22;;;;30718:4;30700:16;;;30696:27;30693:47;;;30736:1;30733;30726:12;30693:47;30762:22;;:::i;:::-;30813:2;30807:9;30800:5;30793:24;30856:2;30852;30848:11;30842:18;30885:2;30875:8;30872:16;30869:36;;;30901:1;30898;30891:12;30869:36;30937:55;30984:7;30973:8;30969:2;30965:17;30937:55;:::i;31028:459::-;31288:1;31284;31279:3;31275:11;31271:19;31263:6;31259:32;31248:9;31241:51;31328:6;31323:2;31312:9;31308:18;31301:34;31371:6;31366:2;31355:9;31351:18;31344:34;31414:3;31409:2;31398:9;31394:18;31387:31;31222:4;31435:46;31476:3;31465:9;31461:19;31453:6;31435:46;:::i;31492:621::-;31769:6;31758:9;31751:25;31812:3;31807:2;31796:9;31792:18;31785:31;31732:4;31839:46;31880:3;31869:9;31865:19;31857:6;31839:46;:::i;:::-;31916:2;31901:18;;31894:34;;;-1:-1:-1;;;;;31964:32:290;;31959:2;31944:18;;31937:60;32034:22;;;32028:3;32013:19;;32006:51;32074:33;32038:6;32092;32074:33;:::i;:::-;32066:41;31492:621;-1:-1:-1;;;;;;;;31492:621:290:o;32118:272::-;32307:2;32296:9;32289:21;32270:4;32327:57;32380:2;32369:9;32365:18;32357:6;32327:57;:::i;32395:128::-;32462:9;;;32483:11;;;32480:37;;;32497:18;;:::i;32528:127::-;32589:10;32584:3;32580:20;32577:1;32570:31;32620:4;32617:1;32610:15;32644:4;32641:1;32634:15;33658:1023;33755:6;33808:2;33796:9;33787:7;33783:23;33779:32;33776:52;;;33824:1;33821;33814:12;33776:52;33857:9;33851:16;-1:-1:-1;;;;;33927:2:290;33919:6;33916:14;33913:34;;;33943:1;33940;33933:12;33913:34;33966:22;;;;34022:4;34004:16;;;34000:27;33997:47;;;34040:1;34037;34030:12;33997:47;34066:22;;:::i;:::-;34117:2;34111:9;34104:5;34097:24;34159:2;34155;34151:11;34145:18;34172:33;34197:7;34172:33;:::i;:::-;34232:2;34221:14;;34214:31;34283:2;34275:11;;34269:18;34296:33;34269:18;34296:33;:::i;:::-;34361:7;34356:2;34349:5;34345:14;34338:31;;34415:2;34411;34407:11;34401:18;34396:2;34389:5;34385:14;34378:42;34467:3;34463:2;34459:12;34453:19;34447:3;34440:5;34436:15;34429:44;34512:3;34508:2;34504:12;34498:19;34542:2;34532:8;34529:16;34526:36;;;34558:1;34555;34548:12;34526:36;34595:55;34642:7;34631:8;34627:2;34623:17;34595:55;:::i;:::-;34589:3;34578:15;;34571:80;-1:-1:-1;34582:5:290;33658:1023;-1:-1:-1;;;;;33658:1023:290:o;34686:277::-;34753:6;34806:2;34794:9;34785:7;34781:23;34777:32;34774:52;;;34822:1;34819;34812:12;34774:52;34854:9;34848:16;34907:5;34900:13;34893:21;34886:5;34883:32;34873:60;;34929:1;34926;34919:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowReceiverBridgeAdapters((address,uint256[])[])": "9d0cb9d4",
    "approveSenders(address[])": "90f7af54",
    "deliverEnvelope((uint256,address,address,uint256,uint256,bytes))": "1947051e",
    "disableBridgeAdapters((address,uint256[])[])": "917cbb9b",
    "disallowReceiverBridgeAdapters((address,uint256[])[])": "e3a95a5a",
    "emergencyEtherTransfer(address,uint256)": "eed88b8d",
    "emergencyTokenTransfer(address,address,uint256)": "a3d5b255",
    "enableBridgeAdapters((address,address,uint256)[])": "0a234b15",
    "forwardMessage(uint256,address,uint256,bytes)": "55c4fed4",
    "getConfigurationByChain(uint256)": "6e74ebe8",
    "getCurrentEnvelopeNonce()": "efe4b0ae",
    "getCurrentTransactionNonce()": "654a812b",
    "getEnvelopeState((uint256,address,address,uint256,uint256,bytes))": "e01658d9",
    "getEnvelopeState(bytes32)": "aa3f85c8",
    "getForwarderBridgeAdaptersByChain(uint256)": "34f7870c",
    "getReceiverBridgeAdaptersByChain(uint256)": "5b9d97c6",
    "getSupportedChains()": "c4bffe2b",
    "getTransactionState((uint256,bytes))": "0fb9ca41",
    "getTransactionState(bytes32)": "c71cca16",
    "guardian()": "452a9320",
    "initialize(address,address,(uint256,uint8)[],(address,uint256[])[],(address,address,uint256)[],address[])": "83fec72c",
    "isEnvelopeRegistered((uint256,address,address,uint256,uint256,bytes))": "436bd103",
    "isEnvelopeRegistered(bytes32)": "db58eaec",
    "isReceiverBridgeAdapterAllowed(address,uint256)": "f62b9843",
    "isSenderApproved(address)": "3805e84e",
    "isTransactionForwarded((uint256,bytes))": "c37255f2",
    "isTransactionForwarded(bytes32)": "9b6c7efa",
    "isTransactionReceivedByAdapter(bytes32,address)": "76e5379a",
    "owner()": "8da5cb5b",
    "receiveCrossChainMessage(bytes,uint256)": "ed68595a",
    "removeSenders(address[])": "7670d1d8",
    "renounceOwnership()": "715018a6",
    "retryEnvelope((uint256,address,address,uint256,uint256,bytes),uint256)": "a25d3892",
    "retryTransaction(bytes,uint256,address[])": "3eb59f60",
    "transferOwnership(address)": "f2fde38b",
    "updateConfirmations((uint256,uint8)[])": "fe46a413",
    "updateGuardian(address)": "fc525395",
    "updateMessagesValidityTimestamp((uint256,uint120)[])": "a2711ff4",
    "whoCanRescue()": "a4757b0f"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bridgeAdapter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destinationBridgeAdapter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"}],\"name\":\"BridgeAdapterUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newConfirmations\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"ConfirmationsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ERC20Rescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"envelopeId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Envelope\",\"name\":\"envelope\",\"type\":\"tuple\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isDelivered\",\"type\":\"bool\"}],\"name\":\"EnvelopeDeliveryAttempted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"envelopeId\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Envelope\",\"name\":\"envelope\",\"type\":\"tuple\"}],\"name\":\"EnvelopeRegistered\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldGuardian\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"GuardianUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"caller\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"NativeTokensRescued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"invalidTimestamp\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"NewInvalidation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bridgeAdapter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"ReceiverBridgeAdaptersUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"isApproved\",\"type\":\"bool\"}],\"name\":\"SenderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"envelopeId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"encodedTransaction\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bridgeAdapter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"destinationBridgeAdapter\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bool\",\"name\":\"adapterSuccessful\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"returnData\",\"type\":\"bytes\"}],\"name\":\"TransactionForwardingAttempted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"envelopeId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedEnvelope\",\"type\":\"bytes\"}],\"indexed\":false,\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"bridgeAdapter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"confirmations\",\"type\":\"uint8\"}],\"name\":\"TransactionReceived\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bridgeAdapter\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"chainIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ICrossChainReceiver.ReceiverBridgeAdapterConfigInput[]\",\"name\":\"bridgeAdaptersInput\",\"type\":\"tuple[]\"}],\"name\":\"allowReceiverBridgeAdapters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"senders\",\"type\":\"address[]\"}],\"name\":\"approveSenders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct Envelope\",\"name\":\"envelope\",\"type\":\"tuple\"}],\"name\":\"deliverEnvelope\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bridgeAdapter\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"chainIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ICrossChainForwarder.BridgeAdapterToDisable[]\",\"name\":\"bridgeAdapters\",\"type\":\"tuple[]\"}],\"name\":\"disableBridgeAdapters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"bridgeAdapter\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"chainIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ICrossChainReceiver.ReceiverBridgeAdapterConfigInput[]\",\"name\":\"bridgeAdapters\",\"type\":\"tuple[]\"}],\"name\":\"disallowReceiverBridgeAdapters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyEtherTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"erc20Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyTokenTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"currentChainBridgeAdapter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationBridgeAdapter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"}],\"internalType\":\"struct ICrossChainForwarder.ForwarderBridgeAdapterConfigInput[]\",\"name\":\"bridgeAdapters\",\"type\":\"tuple[]\"}],\"name\":\"enableBridgeAdapters\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"name\":\"forwardMessage\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getConfigurationByChain\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"requiredConfirmation\",\"type\":\"uint8\"},{\"internalType\":\"uint120\",\"name\":\"validityTimestamp\",\"type\":\"uint120\"}],\"internalType\":\"struct ICrossChainReceiver.ReceiverConfiguration\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEnvelopeNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTransactionNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"envelopeId\",\"type\":\"bytes32\"}],\"name\":\"getEnvelopeState\",\"outputs\":[{\"internalType\":\"enum ICrossChainReceiver.EnvelopeState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct Envelope\",\"name\":\"envelope\",\"type\":\"tuple\"}],\"name\":\"getEnvelopeState\",\"outputs\":[{\"internalType\":\"enum ICrossChainReceiver.EnvelopeState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getForwarderBridgeAdaptersByChain\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"destinationBridgeAdapter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"currentChainBridgeAdapter\",\"type\":\"address\"}],\"internalType\":\"struct ICrossChainForwarder.ChainIdBridgeConfig[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"getReceiverBridgeAdaptersByChain\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSupportedChains\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedEnvelope\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"}],\"name\":\"getTransactionState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"confirmations\",\"type\":\"uint8\"},{\"internalType\":\"uint120\",\"name\":\"firstBridgedAt\",\"type\":\"uint120\"}],\"internalType\":\"struct ICrossChainReceiver.TransactionStateWithoutAdapters\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"}],\"name\":\"getTransactionState\",\"outputs\":[{\"components\":[{\"internalType\":\"uint8\",\"name\":\"confirmations\",\"type\":\"uint8\"},{\"internalType\":\"uint120\",\"name\":\"firstBridgedAt\",\"type\":\"uint120\"}],\"internalType\":\"struct ICrossChainReceiver.TransactionStateWithoutAdapters\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"guardian\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"requiredConfirmations\",\"type\":\"uint8\"}],\"internalType\":\"struct ICrossChainReceiver.ConfirmationInput[]\",\"name\":\"initialRequiredConfirmations\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"bridgeAdapter\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"chainIds\",\"type\":\"uint256[]\"}],\"internalType\":\"struct ICrossChainReceiver.ReceiverBridgeAdapterConfigInput[]\",\"name\":\"receiverBridgeAdaptersToAllow\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"currentChainBridgeAdapter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destinationBridgeAdapter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"}],\"internalType\":\"struct ICrossChainForwarder.ForwarderBridgeAdapterConfigInput[]\",\"name\":\"forwarderBridgeAdaptersToEnable\",\"type\":\"tuple[]\"},{\"internalType\":\"address[]\",\"name\":\"sendersToApprove\",\"type\":\"address[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct Envelope\",\"name\":\"envelope\",\"type\":\"tuple\"}],\"name\":\"isEnvelopeRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"envelopeId\",\"type\":\"bytes32\"}],\"name\":\"isEnvelopeRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeAdapter\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"}],\"name\":\"isReceiverBridgeAdapterAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"isSenderApproved\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"}],\"name\":\"isTransactionForwarded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"encodedEnvelope\",\"type\":\"bytes\"}],\"internalType\":\"struct Transaction\",\"name\":\"transaction\",\"type\":\"tuple\"}],\"name\":\"isTransactionForwarded\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"transactionId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"bridgeAdapter\",\"type\":\"address\"}],\"name\":\"isTransactionReceivedByAdapter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTransaction\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"}],\"name\":\"receiveCrossChainMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"senders\",\"type\":\"address[]\"}],\"name\":\"removeSenders\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"origin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"destination\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"originChainId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"destinationChainId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"}],\"internalType\":\"struct Envelope\",\"name\":\"envelope\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"retryEnvelope\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"encodedTransaction\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"bridgeAdaptersToRetry\",\"type\":\"address[]\"}],\"name\":\"retryTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"requiredConfirmations\",\"type\":\"uint8\"}],\"internalType\":\"struct ICrossChainReceiver.ConfirmationInput[]\",\"name\":\"newConfirmations\",\"type\":\"tuple[]\"}],\"name\":\"updateConfirmations\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newGuardian\",\"type\":\"address\"}],\"name\":\"updateGuardian\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"chainId\",\"type\":\"uint256\"},{\"internalType\":\"uint120\",\"name\":\"validityTimestamp\",\"type\":\"uint120\"}],\"internalType\":\"struct ICrossChainReceiver.ValidityTimestampInput[]\",\"name\":\"newValidityTimestamp\",\"type\":\"tuple[]\"}],\"name\":\"updateMessagesValidityTimestamp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"whoCanRescue\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"BGD Labs\",\"errors\":{\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"BridgeAdapterUpdated(uint256,address,address,bool)\":{\"params\":{\"allowed\":\"boolean indicating if the bridge adapter is allowed or disallowed\",\"bridgeAdapter\":\"address of the bridge adapter added (deployed on current network)\",\"destinationBridgeAdapter\":\"address of the connected bridge adapter on destination chain\",\"destinationChainId\":\"id of the destination chain in our notation\"}},\"ConfirmationsUpdated(uint8,uint256)\":{\"params\":{\"chainId\":\"id of the chain updated\",\"newConfirmations\":\"number of new confirmations needed for a message to be valid\"}},\"ERC20Rescued(address,address,address,uint256)\":{\"params\":{\"amount\":\"quantity of tokens rescued\",\"caller\":\"address that triggers the rescue\",\"to\":\"address that will receive the rescued tokens\",\"token\":\"address of the rescued token\"}},\"EnvelopeDeliveryAttempted(bytes32,(uint256,address,address,uint256,uint256,bytes),bool)\":{\"params\":{\"envelope\":\"the Envelope type data\",\"envelopeId\":\"id of the envelope\",\"isDelivered\":\"flag indicating if the message has been delivered successfully\"}},\"EnvelopeRegistered(bytes32,(uint256,address,address,uint256,uint256,bytes))\":{\"params\":{\"envelope\":\"the Envelope type data\",\"envelopeId\":\"internal id of the envelope\"}},\"GuardianUpdated(address,address)\":{\"details\":\"Event emitted when guardian gets updated\",\"params\":{\"newGuardian\":\"address of the new guardian\",\"oldGuardian\":\"address of previous guardian\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"NativeTokensRescued(address,address,uint256)\":{\"params\":{\"amount\":\"quantity of tokens rescued\",\"caller\":\"address that triggers the rescue\",\"to\":\"address that will receive the rescued tokens\"}},\"NewInvalidation(uint256,uint256)\":{\"params\":{\"chainId\":\"id of the chain updated\",\"invalidTimestamp\":\"timestamp to invalidate previous messages\"}},\"ReceiverBridgeAdaptersUpdated(address,bool,uint256)\":{\"params\":{\"allowed\":\"boolean indicating if the bridge adapter has been allowed or disallowed\",\"bridgeAdapter\":\"address of the updated bridge adapter\",\"chainId\":\"id of the chain updated\"}},\"SenderUpdated(address,bool)\":{\"params\":{\"isApproved\":\"boolean that indicates if the sender has been approved or removed\",\"sender\":\"address of the updated sender\"}},\"TransactionForwardingAttempted(bytes32,bytes32,bytes,uint256,address,address,bool,bytes)\":{\"params\":{\"adapterSuccessful\":\"adapter was able to forward the message\",\"bridgeAdapter\":\"address of the bridge adapter that failed (deployed on current network)\",\"destinationBridgeAdapter\":\"address of the connected bridge adapter on destination chain\",\"destinationChainId\":\"id of the destination chain in our notation\",\"encodedTransaction\":\"object intended to be bridged\",\"envelopeId\":\"internal id of the envelope\",\"returnData\":\"bytes with error information\",\"transactionId\":\"id of the forwarded transaction\"}},\"TransactionReceived(bytes32,bytes32,uint256,(uint256,bytes),address,uint8)\":{\"params\":{\"bridgeAdapter\":\"address of the bridge adapter who received the message (deployed on current network)\",\"confirmations\":\"number of current confirmations for this message\",\"envelopeId\":\"id of the envelope\",\"originChainId\":\"id of the chain where the envelope originated\",\"transaction\":\"the Transaction type data\",\"transactionId\":\"id of the transaction\"}}},\"kind\":\"dev\",\"methods\":{\"allowReceiverBridgeAdapters((address,uint256[])[])\":{\"params\":{\"bridgeAdaptersInput\":\"array of objects with the new bridge adapters and supported chains\"}},\"approveSenders(address[])\":{\"params\":{\"senders\":\"list of addresses to approve\"}},\"deliverEnvelope((uint256,address,address,uint256,uint256,bytes))\":{\"details\":\"to deliver an envelope, it needs to have been previously confirmed and not delivered\",\"params\":{\"envelope\":\"the Envelope typed data\"}},\"disableBridgeAdapters((address,uint256[])[])\":{\"params\":{\"bridgeAdapters\":\"array of bridge adapter addresses to disable\"}},\"disallowReceiverBridgeAdapters((address,uint256[])[])\":{\"params\":{\"bridgeAdaptersInput\":\"array of objects with the bridge adapters and supported chains to disallow\"}},\"emergencyEtherTransfer(address,uint256)\":{\"params\":{\"amount\":\"of eth to rescue\",\"to\":\"address to send the eth\"}},\"emergencyTokenTransfer(address,address,uint256)\":{\"params\":{\"amount\":\"of tokens to rescue\",\"erc20Token\":\"address of the token to rescue\",\"to\":\"address to send the tokens\"}},\"enableBridgeAdapters((address,address,uint256)[])\":{\"params\":{\"bridgeAdapters\":\"array of new bridge adapter configurations\"}},\"forwardMessage(uint256,address,uint256,bytes)\":{\"params\":{\"destination\":\"address where the message is intended for\",\"destinationChainId\":\"id of the destination chain where the message needs to be bridged\",\"gasLimit\":\"gas cost on receiving side of the message\",\"message\":\"bytes that need to be bridged\"},\"returns\":{\"_0\":\"internal id of the envelope and transaction\"}},\"getConfigurationByChain(uint256)\":{\"params\":{\"chainId\":\"id of the chain to get the configuration from\"},\"returns\":{\"_0\":\"the specified chain configuration object\"}},\"getCurrentEnvelopeNonce()\":{\"returns\":{\"_0\":\"the current valid envelope nonce\"}},\"getCurrentTransactionNonce()\":{\"returns\":{\"_0\":\"the current valid transaction nonce\"}},\"getEnvelopeState((uint256,address,address,uint256,uint256,bytes))\":{\"params\":{\"envelope\":\"the Envelope type data\"},\"returns\":{\"_0\":\"the envelope current state, containing if it has been confirmed and delivered\"}},\"getEnvelopeState(bytes32)\":{\"params\":{\"envelopeId\":\"id of the envelope\"},\"returns\":{\"_0\":\"the envelope current state, containing if it has been confirmed and delivered\"}},\"getForwarderBridgeAdaptersByChain(uint256)\":{\"params\":{\"chainId\":\"id of the chain we want to get the adapters from\"},\"returns\":{\"_0\":\"an array of chain configurations where the bridge adapter can communicate\"}},\"getReceiverBridgeAdaptersByChain(uint256)\":{\"params\":{\"chainId\":\"id of the chain to get the allowed bridge adapter list\"},\"returns\":{\"_0\":\"the list of allowed bridge adapters\"}},\"getSupportedChains()\":{\"returns\":{\"_0\":\"list of supported chains\"}},\"getTransactionState((uint256,bytes))\":{\"params\":{\"transaction\":\"Transaction type data\"},\"returns\":{\"_0\":\"number of confirmations of internal message identified by internalId and the updated timestamp\"}},\"getTransactionState(bytes32)\":{\"params\":{\"transactionId\":\"the id of transaction\"},\"returns\":{\"_0\":\"number of confirmations of internal message identified by the transactionId and the updated timestamp\"}},\"guardian()\":{\"details\":\"get guardian address;\"},\"initialize(address,address,(uint256,uint8)[],(address,uint256[])[],(address,address,uint256)[],address[])\":{\"params\":{\"forwarderBridgeAdaptersToEnable\":\"array specifying for every bridgeAdapter, the destinations it can have\",\"guardian\":\"address of the guardian of the cross chain controller\",\"initialRequiredConfirmations\":\"number of confirmations the messages need to be accepted as valid\",\"owner\":\"address of the owner of the cross chain controller\",\"receiverBridgeAdaptersToAllow\":\"array of addresses of the bridge adapters that can receive messages\",\"sendersToApprove\":\"array of addresses to allow as forwarders\"}},\"isEnvelopeRegistered((uint256,address,address,uint256,uint256,bytes))\":{\"params\":{\"envelope\":\"the Envelope type data\"},\"returns\":{\"_0\":\"boolean indicating if the envelope has been registered\"}},\"isEnvelopeRegistered(bytes32)\":{\"params\":{\"envelopeId\":\"the hashed id of the envelope\"},\"returns\":{\"_0\":\"boolean indicating if the envelope has been registered\"}},\"isReceiverBridgeAdapterAllowed(address,uint256)\":{\"params\":{\"bridgeAdapter\":\"address of the bridge adapter to check\",\"chainId\":\"id of the chain to check\"},\"returns\":{\"_0\":\"boolean indicating if bridge adapter is allowed\"}},\"isSenderApproved(address)\":{\"params\":{\"sender\":\"address that we want to check if approved\"},\"returns\":{\"_0\":\"boolean indicating if the address has been approved as sender\"}},\"isTransactionForwarded((uint256,bytes))\":{\"params\":{\"transaction\":\"the Transaction type data\"},\"returns\":{\"_0\":\"flag indicating if a transaction has been forwarded\"}},\"isTransactionForwarded(bytes32)\":{\"params\":{\"transactionId\":\"hashed id of the transaction\"},\"returns\":{\"_0\":\"flag indicating if a transaction has been forwarded\"}},\"isTransactionReceivedByAdapter(bytes32,address)\":{\"params\":{\"bridgeAdapter\":\"address of the bridge adapter to check if it has bridged the message\",\"transactionId\":\"id of the transaction as stored internally\"},\"returns\":{\"_0\":\"boolean indicating if the message has been received\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"receiveCrossChainMessage(bytes,uint256)\":{\"params\":{\"encodedTransaction\":\"bytes containing the bridged information\",\"originChainId\":\"id of the chain where the transaction originated\"}},\"removeSenders(address[])\":{\"params\":{\"senders\":\"list of addresses to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"retryEnvelope((uint256,address,address,uint256,uint256,bytes),uint256)\":{\"details\":\"This method will send an existing Envelope using a new Transaction.This method should be used when the intention is to send the Envelope as if it was a new message. This way on the Receiver side it will start from 0 to count for the required confirmations. (usual use case would be for when an envelope has been invalidated on Receiver side, and needs to be retried as a new message)\",\"params\":{\"envelope\":\"the Envelope type data\",\"gasLimit\":\"gas cost on receiving side of the message\"},\"returns\":{\"_0\":\"the transaction id that has the retried envelope\"}},\"retryTransaction(bytes,uint256,address[])\":{\"details\":\"This method will send an existing Transaction with its Envelope to the specified adapters.Should be used when some of the bridges on the initial forwarding did not work (out of gas), and we want the Transaction with Envelope to still account for the required confirmations on the Receiver side\",\"params\":{\"bridgeAdaptersToRetry\":\"list of bridge adapters to be used for the transaction forwarding retry\",\"encodedTransaction\":\"the encoded Transaction data\",\"gasLimit\":\"limit of gas to spend on forwarding per bridge\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateConfirmations((uint256,uint8)[])\":{\"params\":{\"newConfirmations\":\"array of objects with the chainId and the new number of needed confirmations\"}},\"updateGuardian(address)\":{\"details\":\"method to update the guardian\",\"params\":{\"newGuardian\":\"the new guardian address\"}},\"updateMessagesValidityTimestamp((uint256,uint120)[])\":{\"params\":{\"newValidityTimestamp\":\"array of objects containing the chain and timestamp where all the previous unconfirmed messages must be invalidated.\"}},\"whoCanRescue()\":{\"returns\":{\"_0\":\"the allowed address\"}}},\"title\":\"CrossChainController\",\"version\":1},\"userdoc\":{\"events\":{\"BridgeAdapterUpdated(uint256,address,address,bool)\":{\"notice\":\"emitted when a bridge adapter has been added to the allowed list\"},\"ConfirmationsUpdated(uint8,uint256)\":{\"notice\":\"emitted when number of confirmations needed to validate a message changes\"},\"ERC20Rescued(address,address,address,uint256)\":{\"notice\":\"emitted when erc20 tokens get rescued\"},\"EnvelopeDeliveryAttempted(bytes32,(uint256,address,address,uint256,uint256,bytes),bool)\":{\"notice\":\"emitted when an envelope has been delivery attempted\"},\"EnvelopeRegistered(bytes32,(uint256,address,address,uint256,uint256,bytes))\":{\"notice\":\"emitted when a transaction is successfully forwarded through a bridge adapter\"},\"NativeTokensRescued(address,address,uint256)\":{\"notice\":\"emitted when native tokens get rescued\"},\"NewInvalidation(uint256,uint256)\":{\"notice\":\"emitted when a new timestamp for invalidations gets set\"},\"ReceiverBridgeAdaptersUpdated(address,bool,uint256)\":{\"notice\":\"emitted when a bridge adapter gets updated (allowed or disallowed)\"},\"SenderUpdated(address,bool)\":{\"notice\":\"emitted when a sender has been updated\"},\"TransactionForwardingAttempted(bytes32,bytes32,bytes,uint256,address,address,bool,bytes)\":{\"notice\":\"emitted when a transaction forwarding is attempted through a bridge adapter\"},\"TransactionReceived(bytes32,bytes32,uint256,(uint256,bytes),address,uint8)\":{\"notice\":\"emitted when a transaction has been received successfully\"}},\"kind\":\"user\",\"methods\":{\"allowReceiverBridgeAdapters((address,uint256[])[])\":{\"notice\":\"method to add bridge adapters to the allowed list\"},\"approveSenders(address[])\":{\"notice\":\"method to approve new sender addresses\"},\"deliverEnvelope((uint256,address,address,uint256,uint256,bytes))\":{\"notice\":\"method to deliver an envelope to its destination\"},\"disableBridgeAdapters((address,uint256[])[])\":{\"notice\":\"method to disable bridge adapters\"},\"disallowReceiverBridgeAdapters((address,uint256[])[])\":{\"notice\":\"method to remove bridge adapters from the allowed list\"},\"emergencyEtherTransfer(address,uint256)\":{\"notice\":\"method called to rescue ether sent erroneously to the contract. Only callable by owner\"},\"emergencyTokenTransfer(address,address,uint256)\":{\"notice\":\"method called to rescue tokens sent erroneously to the contract. Only callable by owner\"},\"enableBridgeAdapters((address,address,uint256)[])\":{\"notice\":\"method to enable bridge adapters\"},\"forwardMessage(uint256,address,uint256,bytes)\":{\"notice\":\"method called to initiate message forwarding to other networks.\"},\"getConfigurationByChain(uint256)\":{\"notice\":\"method to get the current configuration of a chain\"},\"getCurrentEnvelopeNonce()\":{\"notice\":\"method to get the current valid envelope nonce\"},\"getCurrentTransactionNonce()\":{\"notice\":\"method to get the current valid transaction nonce\"},\"getEnvelopeState((uint256,address,address,uint256,uint256,bytes))\":{\"notice\":\"method to get the internal state of an envelope\"},\"getEnvelopeState(bytes32)\":{\"notice\":\"method to get the internal state of an envelope\"},\"getForwarderBridgeAdaptersByChain(uint256)\":{\"notice\":\"method to get all the forwarder bridge adapters of a chain\"},\"getReceiverBridgeAdaptersByChain(uint256)\":{\"notice\":\"method to get the current allowed receiver bridge adapters for a chain\"},\"getSupportedChains()\":{\"notice\":\"method to get the current supported chains (at least one allowed bridge adapter)\"},\"getTransactionState((uint256,bytes))\":{\"notice\":\"method to get the internal transaction information\"},\"getTransactionState(bytes32)\":{\"notice\":\"method to get the current state of a transaction\"},\"initialize(address,address,(uint256,uint8)[],(address,uint256[])[],(address,address,uint256)[],address[])\":{\"notice\":\"method called to initialize the proxy\"},\"isEnvelopeRegistered((uint256,address,address,uint256,uint256,bytes))\":{\"notice\":\"method to check if a envelope has been previously forwarded.\"},\"isEnvelopeRegistered(bytes32)\":{\"notice\":\"method to check if a envelope has been previously forwarded.\"},\"isReceiverBridgeAdapterAllowed(address,uint256)\":{\"notice\":\"method to get if a bridge adapter is allowed\"},\"isSenderApproved(address)\":{\"notice\":\"method to get if a sender is approved\"},\"isTransactionForwarded((uint256,bytes))\":{\"notice\":\"method to get if a transaction has been forwarded\"},\"isTransactionForwarded(bytes32)\":{\"notice\":\"method to get if a transaction has been forwarded\"},\"isTransactionReceivedByAdapter(bytes32,address)\":{\"notice\":\"method to get if transaction has been received by bridge adapter\"},\"receiveCrossChainMessage(bytes,uint256)\":{\"notice\":\"method that receives a bridged transaction and tries to deliver the contents to destination if possible\"},\"removeSenders(address[])\":{\"notice\":\"method to remove sender addresses\"},\"retryEnvelope((uint256,address,address,uint256,uint256,bytes),uint256)\":{\"notice\":\"method called to re forward a previously sent envelope.\"},\"retryTransaction(bytes,uint256,address[])\":{\"notice\":\"method to retry forwarding an already forwarded transaction\"},\"updateConfirmations((uint256,uint8)[])\":{\"notice\":\"method to update the number of confirmations necessary for the messages to be accepted as valid\"},\"updateMessagesValidityTimestamp((uint256,uint120)[])\":{\"notice\":\"method to set a new timestamp from where the messages will be valid.\"},\"whoCanRescue()\":{\"notice\":\"method that defines the address that is allowed to rescue tokens\"}},\"notice\":\"CrossChainController contract adopted for usage on the chain where Governance deployed (mainnet in our case)\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/CrossChainController.sol\":\"CrossChainController\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@aave/core-v3/=lib/aave-address-book/lib/aave-v3-core/\",\":@aave/periphery-v3/=lib/aave-address-book/lib/aave-v3-periphery/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":aave-address-book/=lib/aave-address-book/src/\",\":aave-v3-core/=lib/aave-address-book/lib/aave-v3-core/\",\":aave-v3-periphery/=lib/aave-address-book/lib/aave-v3-periphery/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":fx-portal/=lib/fx-portal/contracts/\",\":hyperlane-monorepo/=lib/hyperlane-monorepo/solidity/contracts/\",\":nitro-contracts/=lib/nitro-contracts/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts/contracts/\",\":solidity-utils/=lib/solidity-utils/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df\",\"dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW\"]},\"lib/solidity-utils/src/contracts/access-control/OwnableWithGuardian.sol\":{\"keccak256\":\"0x097e97cbceb38880d74db6311ffbaf158aa9e0735ec51367c60853d6eb811ff1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f83b6aa842af14fe0a8bc1ec8f844d69bf490873d72cb324462ae5f59a9267b\",\"dweb:/ipfs/QmRYv2HhJdULNQt9aTCsKWQdEVmDyjLfj3qJS3xUd4FyPF\"]},\"lib/solidity-utils/src/contracts/access-control/interfaces/IWithGuardian.sol\":{\"keccak256\":\"0x2fd8f1a5a9da521eda9d424c0764e9ceac7c3d1afa90ac9124249c5a3c7d9d1a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75ac28fae9d3a5cf111c6abc70f8a410a89f852d0dd5835bd29f6e0d0e837bc5\",\"dweb:/ipfs/QmcU48h5Lxc74jLfVrdzFkjWdLRStiz1w5GmBBx58kJo6s\"]},\"lib/solidity-utils/src/contracts/oz-common/Address.sol\":{\"keccak256\":\"0xe641fb89c32466792ed9877ec915c699acfe5c04c655cf9e67738093a40c962c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597b0804825a4c6acbec4e466f30138a527da64a8dd3cc7ae69a68d046e8852e\",\"dweb:/ipfs/QmVvhwnnWvMkaYNcfyeihW1ajwDiGhVV6KcTNoPD9HCVym\"]},\"lib/solidity-utils/src/contracts/oz-common/Context.sol\":{\"keccak256\":\"0x6912c0cdc79f627eaa1511695fa0c14389681720812e5548645774d784bc24df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f2ae1b63c4be0f695d721e28361b34fe22a2e7e05723ca466b3ad2dde73db6f\",\"dweb:/ipfs/Qman92tY6xcqnXZa59TJiJKtf4Hhe5hhJrdERiStBV8EiK\"]},\"lib/solidity-utils/src/contracts/oz-common/Ownable.sol\":{\"keccak256\":\"0x5566fcff7455a22cde32daecec5c44c893dddee1472063f2dcd301e844eabd00\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://306860d4e8ecf8cf5928dd757f0e8f8530f05791a0a133acfc9be91d8e75f24a\",\"dweb:/ipfs/QmeuzENUkcz5GFTsXJUsMj1NpjbHg8hNJPDBtWzLAnEjkm\"]},\"lib/solidity-utils/src/contracts/oz-common/SafeERC20.sol\":{\"keccak256\":\"0x42c6ca0e62e6a0d93137f11377ef4888c19d3c503169692f36f32076887059b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ac0120428aad94493baa9454143b7d0e0d1f063278abcad3ea24a1cadc84371\",\"dweb:/ipfs/QmepMxuDv7SthD9c2EyD4wzPNkchHrRmDKcUEMg8ueV6Fr\"]},\"lib/solidity-utils/src/contracts/oz-common/interfaces/IERC20.sol\":{\"keccak256\":\"0x510a088112e38933c8eff10816a3f74a0ea2365dc0914384b9097cdb62d8db69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3f702a4bfbec4bb8604174d80de82d5960b8997cd5b832c6f9a1850593e4bd4\",\"dweb:/ipfs/QmfXs5ejLkLQKYAg2RSm2woaAhZya6oVPeDs7T5yrAWBhT\"]},\"lib/solidity-utils/src/contracts/oz-common/interfaces/IERC20Permit.sol\":{\"keccak256\":\"0xf455056affbe27997d7cdfbb7ee3b8e7cdef3c2f6b71d97cc204cb1621440193\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ce1d2a17f6d32246ec54ebf5e1fcfd72d48d606bb4c192a4e1051d08de2b20c\",\"dweb:/ipfs/QmZSPGWfJAzBudcsLQaMXwhQvg3X2Jya5NvxkSGy7ViCFa\"]},\"lib/solidity-utils/src/contracts/transparent-proxy/Initializable.sol\":{\"keccak256\":\"0x13984ac6962308e94d92148e47eb4cd31c113b2a4798246714f2235ab9d9d7a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://77edd0450d7c6bd07544bc4597845f2e7840ab19504d5286928f93a431e0e831\",\"dweb:/ipfs/Qmddubpa2kF6UEsuiWtCuLjEDjk6EPz1AzqqyabwqJ1jaS\"]},\"lib/solidity-utils/src/contracts/utils/Rescuable.sol\":{\"keccak256\":\"0xf7b7704dda57414708709251229583c917874f89a439e998b3347ee9340a95f9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59a79763e07df9fd1ead7eb7b474e5b42927065db1e63dfb012a715887667a27\",\"dweb:/ipfs/QmbZ7v236pDXPZVm4GnsgLp5sQM2ii83r2q41G1ywpThba\"]},\"lib/solidity-utils/src/contracts/utils/interfaces/IRescuable.sol\":{\"keccak256\":\"0xb7339cccbe91b2b0d9bd9adf4be58605ee75032eead9e3213304c6ae5ba108c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://09db6f6a18144eb4a47353163408cebd32499b2611972cc8ddffc257654780b1\",\"dweb:/ipfs/Qmb6A7wFipu6seiUG3n2LoeWo91Nrj9xsapJKqEXExe7MX\"]},\"src/contracts/BaseCrossChainController.sol\":{\"keccak256\":\"0x800641fd2b769118df88683020ffc0907a13ebc2a2817ef565c064152d0f35d5\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://2e86be71893e841b44f985f18af77071b7119587bfe09bb8aaf71d2f9a7edcac\",\"dweb:/ipfs/QmTFgyzGdzRXe4ZNQn2tN51NcACgSdWAF2VAF7pExmEkU7\"]},\"src/contracts/CrossChainController.sol\":{\"keccak256\":\"0x3cf72ab0d7673cb4261965ab31a2b8ba9567bcce68e6f83283da94d36da8da76\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e2b8a78275e8200fcd2e434ad11d178ba816faabfc53eda845724aa002940d1c\",\"dweb:/ipfs/QmZ5FaZLnA92he1U95KFvEWdYKSu6SAEYnxQXJN1zMknsJ\"]},\"src/contracts/CrossChainForwarder.sol\":{\"keccak256\":\"0xbef311a4d79ee901ccae60b8ed8f88dd1559f799895458a48a92e6a6d114a6c3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3e237a8732716c69aaec8fd56d286ebe58a819c250b23ae7a693b1acd1350760\",\"dweb:/ipfs/QmPtPfhUNQoXwYaHhDX15JNcHesn1zERix6sfSVyEyjGGn\"]},\"src/contracts/CrossChainReceiver.sol\":{\"keccak256\":\"0x9a3613b6a4e0c2bdf82c917c7d6f108320cd62ef33e3fef49c3ef87ae405c6b8\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://94bb65cfcdd811affe0947f90148b0c20fc78211444ca14b07c6dec4ded8f58c\",\"dweb:/ipfs/QmVyn5oe8CYWS5dzUsk2BbXUoZ9ppx3w44vq9zp1bEKJ5C\"]},\"src/contracts/adapters/IBaseAdapter.sol\":{\"keccak256\":\"0x97ef80b6aeebf7ced38ac3816fd57e5eabd58ae251d47f17b63d2981b1f92e8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57a009f5ed843cfa18508b9f36eeaa521f233563553c9d16e80eaba90f81369b\",\"dweb:/ipfs/QmaABhvQyMjF43qshQAH5hWrNqkWfYhYqHSYBmAgq6icug\"]},\"src/contracts/interfaces/IBaseCrossChainController.sol\":{\"keccak256\":\"0x5d226f4f433e4b73650f8f1a749eac15f44c537d2561b44fb8b979221d2fa22b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20ec37bc28bd5bb67940021014f169a90912b8c281f4220949ea9e6e940116c9\",\"dweb:/ipfs/QmXH9QBmoApfSYR82ZRVpu2JGekdE4116puXrJgkfLEdYe\"]},\"src/contracts/interfaces/IBaseReceiverPortal.sol\":{\"keccak256\":\"0x636561bf24807679c5a877b7394308545dc028fe76932d15257098be5991959f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2e5f47d74b026fc94aaeec2fd74adc081dca753881b8a84265a34a7462d31b7b\",\"dweb:/ipfs/QmVWnGLdJshoWJJwMZKNZS76auTNBTZgswvLUduUxCoja2\"]},\"src/contracts/interfaces/ICrossChainController.sol\":{\"keccak256\":\"0x3e7285b5e32f47a8c352d3583d8bd892f5e89dfd63f48a532f972fbdf238e954\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d42a2ded743fd9f5d614a0d85a5065b05e90b4c517b6935f2a1076f7bbf23a7f\",\"dweb:/ipfs/QmRhceFdsSYSjrpkMkWXxvGbxRduyLER5sBVBN8uiwHkwg\"]},\"src/contracts/interfaces/ICrossChainForwarder.sol\":{\"keccak256\":\"0x7c67c32148d66de52ca28ae18c115b10753772aacd6dd020280590f137cc2056\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4077ddc3e091ee38556a7c0797de9b1608f32765d9f62a07efea6505bbebfa7c\",\"dweb:/ipfs/Qmbns917YEfng8nqn8wu3KnKBy562K7uWK3kxfzRsPdY27\"]},\"src/contracts/interfaces/ICrossChainReceiver.sol\":{\"keccak256\":\"0xf55d606adfb99cf829845731241d6eff48ef3a36153290fb6daf7af2250e3ec5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1331b21d98f083181beb5f1f9b817757760a4ef3d79665e118fb4036ca7c056a\",\"dweb:/ipfs/QmUXUZeess24rcSjXxo1geCu9BxG4X7ivEHGKhSy6bPbmW\"]},\"src/contracts/libs/EncodingUtils.sol\":{\"keccak256\":\"0xe778561273ede6b3db73f2fb7b2b443cf0a733a209967af59db107406b68964a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7361dd55dee3cf7bd053d7cd289e148c9451e98c8126672e6287f4e769ab8fba\",\"dweb:/ipfs/QmeH1cwptCar31XamSH2QHSeG4BrS86KNdAbnvk6VGFvLB\"]},\"src/contracts/libs/Errors.sol\":{\"keccak256\":\"0x4a4502debe85d126eb37f8268d2d816636ae21c08b0dae7f26cb11d2bae0f80d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ab72c20ea1e07f3bf567cddd96a0749b9a0afb0beefdc9a6f589657f4f97bc39\",\"dweb:/ipfs/QmXXu7CRbhhHqpjdvoBanTsf7wjD6N457ho3vE2dprSy2S\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.19+commit.7dd6d404" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [{ "internalType": "address", "name": "token", "type": "address" }],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "destinationChainId", "type": "uint256", "indexed": true },
            { "internalType": "address", "name": "bridgeAdapter", "type": "address", "indexed": true },
            { "internalType": "address", "name": "destinationBridgeAdapter", "type": "address", "indexed": false },
            { "internalType": "bool", "name": "allowed", "type": "bool", "indexed": true }
          ],
          "type": "event",
          "name": "BridgeAdapterUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint8", "name": "newConfirmations", "type": "uint8", "indexed": false },
            { "internalType": "uint256", "name": "chainId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "ConfirmationsUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address", "indexed": true },
            { "internalType": "address", "name": "token", "type": "address", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "ERC20Rescued",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "envelopeId", "type": "bytes32", "indexed": false },
            {
              "internalType": "struct Envelope",
              "name": "envelope",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "nonce", "type": "uint256" },
                { "internalType": "address", "name": "origin", "type": "address" },
                { "internalType": "address", "name": "destination", "type": "address" },
                { "internalType": "uint256", "name": "originChainId", "type": "uint256" },
                { "internalType": "uint256", "name": "destinationChainId", "type": "uint256" },
                { "internalType": "bytes", "name": "message", "type": "bytes" }
              ],
              "indexed": false
            },
            { "internalType": "bool", "name": "isDelivered", "type": "bool", "indexed": false }
          ],
          "type": "event",
          "name": "EnvelopeDeliveryAttempted",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "envelopeId", "type": "bytes32", "indexed": true },
            {
              "internalType": "struct Envelope",
              "name": "envelope",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "nonce", "type": "uint256" },
                { "internalType": "address", "name": "origin", "type": "address" },
                { "internalType": "address", "name": "destination", "type": "address" },
                { "internalType": "uint256", "name": "originChainId", "type": "uint256" },
                { "internalType": "uint256", "name": "destinationChainId", "type": "uint256" },
                { "internalType": "bytes", "name": "message", "type": "bytes" }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "EnvelopeRegistered",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "oldGuardian", "type": "address", "indexed": false },
            { "internalType": "address", "name": "newGuardian", "type": "address", "indexed": false }
          ],
          "type": "event",
          "name": "GuardianUpdated",
          "anonymous": false
        },
        {
          "inputs": [{ "internalType": "uint8", "name": "version", "type": "uint8", "indexed": false }],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "caller", "type": "address", "indexed": true },
            { "internalType": "address", "name": "to", "type": "address", "indexed": true },
            { "internalType": "uint256", "name": "amount", "type": "uint256", "indexed": false }
          ],
          "type": "event",
          "name": "NativeTokensRescued",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "invalidTimestamp", "type": "uint256", "indexed": false },
            { "internalType": "uint256", "name": "chainId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "NewInvalidation",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "previousOwner", "type": "address", "indexed": true },
            { "internalType": "address", "name": "newOwner", "type": "address", "indexed": true }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "bridgeAdapter", "type": "address", "indexed": true },
            { "internalType": "bool", "name": "allowed", "type": "bool", "indexed": true },
            { "internalType": "uint256", "name": "chainId", "type": "uint256", "indexed": true }
          ],
          "type": "event",
          "name": "ReceiverBridgeAdaptersUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "address", "name": "sender", "type": "address", "indexed": true },
            { "internalType": "bool", "name": "isApproved", "type": "bool", "indexed": true }
          ],
          "type": "event",
          "name": "SenderUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "transactionId", "type": "bytes32", "indexed": false },
            { "internalType": "bytes32", "name": "envelopeId", "type": "bytes32", "indexed": true },
            { "internalType": "bytes", "name": "encodedTransaction", "type": "bytes", "indexed": false },
            { "internalType": "uint256", "name": "destinationChainId", "type": "uint256", "indexed": false },
            { "internalType": "address", "name": "bridgeAdapter", "type": "address", "indexed": true },
            { "internalType": "address", "name": "destinationBridgeAdapter", "type": "address", "indexed": false },
            { "internalType": "bool", "name": "adapterSuccessful", "type": "bool", "indexed": true },
            { "internalType": "bytes", "name": "returnData", "type": "bytes", "indexed": false }
          ],
          "type": "event",
          "name": "TransactionForwardingAttempted",
          "anonymous": false
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "transactionId", "type": "bytes32", "indexed": false },
            { "internalType": "bytes32", "name": "envelopeId", "type": "bytes32", "indexed": true },
            { "internalType": "uint256", "name": "originChainId", "type": "uint256", "indexed": true },
            {
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "nonce", "type": "uint256" },
                { "internalType": "bytes", "name": "encodedEnvelope", "type": "bytes" }
              ],
              "indexed": false
            },
            { "internalType": "address", "name": "bridgeAdapter", "type": "address", "indexed": true },
            { "internalType": "uint8", "name": "confirmations", "type": "uint8", "indexed": false }
          ],
          "type": "event",
          "name": "TransactionReceived",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct ICrossChainReceiver.ReceiverBridgeAdapterConfigInput[]",
              "name": "bridgeAdaptersInput",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "bridgeAdapter", "type": "address" },
                { "internalType": "uint256[]", "name": "chainIds", "type": "uint256[]" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "allowReceiverBridgeAdapters"
        },
        {
          "inputs": [{ "internalType": "address[]", "name": "senders", "type": "address[]" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approveSenders"
        },
        {
          "inputs": [
            {
              "internalType": "struct Envelope",
              "name": "envelope",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "nonce", "type": "uint256" },
                { "internalType": "address", "name": "origin", "type": "address" },
                { "internalType": "address", "name": "destination", "type": "address" },
                { "internalType": "uint256", "name": "originChainId", "type": "uint256" },
                { "internalType": "uint256", "name": "destinationChainId", "type": "uint256" },
                { "internalType": "bytes", "name": "message", "type": "bytes" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deliverEnvelope"
        },
        {
          "inputs": [
            {
              "internalType": "struct ICrossChainForwarder.BridgeAdapterToDisable[]",
              "name": "bridgeAdapters",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "bridgeAdapter", "type": "address" },
                { "internalType": "uint256[]", "name": "chainIds", "type": "uint256[]" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disableBridgeAdapters"
        },
        {
          "inputs": [
            {
              "internalType": "struct ICrossChainReceiver.ReceiverBridgeAdapterConfigInput[]",
              "name": "bridgeAdapters",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "bridgeAdapter", "type": "address" },
                { "internalType": "uint256[]", "name": "chainIds", "type": "uint256[]" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "disallowReceiverBridgeAdapters"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "emergencyEtherTransfer"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "erc20Token", "type": "address" },
            { "internalType": "address", "name": "to", "type": "address" },
            { "internalType": "uint256", "name": "amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "emergencyTokenTransfer"
        },
        {
          "inputs": [
            {
              "internalType": "struct ICrossChainForwarder.ForwarderBridgeAdapterConfigInput[]",
              "name": "bridgeAdapters",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "currentChainBridgeAdapter", "type": "address" },
                { "internalType": "address", "name": "destinationBridgeAdapter", "type": "address" },
                { "internalType": "uint256", "name": "destinationChainId", "type": "uint256" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableBridgeAdapters"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "destinationChainId", "type": "uint256" },
            { "internalType": "address", "name": "destination", "type": "address" },
            { "internalType": "uint256", "name": "gasLimit", "type": "uint256" },
            { "internalType": "bytes", "name": "message", "type": "bytes" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "forwardMessage",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" },
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "chainId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getConfigurationByChain",
          "outputs": [
            {
              "internalType": "struct ICrossChainReceiver.ReceiverConfiguration",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "uint8", "name": "requiredConfirmation", "type": "uint8" },
                { "internalType": "uint120", "name": "validityTimestamp", "type": "uint120" }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentEnvelopeNonce",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getCurrentTransactionNonce",
          "outputs": [{ "internalType": "uint256", "name": "", "type": "uint256" }]
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "envelopeId", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getEnvelopeState",
          "outputs": [{ "internalType": "enum ICrossChainReceiver.EnvelopeState", "name": "", "type": "uint8" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Envelope",
              "name": "envelope",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "nonce", "type": "uint256" },
                { "internalType": "address", "name": "origin", "type": "address" },
                { "internalType": "address", "name": "destination", "type": "address" },
                { "internalType": "uint256", "name": "originChainId", "type": "uint256" },
                { "internalType": "uint256", "name": "destinationChainId", "type": "uint256" },
                { "internalType": "bytes", "name": "message", "type": "bytes" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getEnvelopeState",
          "outputs": [{ "internalType": "enum ICrossChainReceiver.EnvelopeState", "name": "", "type": "uint8" }]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "chainId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getForwarderBridgeAdaptersByChain",
          "outputs": [
            {
              "internalType": "struct ICrossChainForwarder.ChainIdBridgeConfig[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "destinationBridgeAdapter", "type": "address" },
                { "internalType": "address", "name": "currentChainBridgeAdapter", "type": "address" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "uint256", "name": "chainId", "type": "uint256" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getReceiverBridgeAdaptersByChain",
          "outputs": [{ "internalType": "address[]", "name": "", "type": "address[]" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSupportedChains",
          "outputs": [{ "internalType": "uint256[]", "name": "", "type": "uint256[]" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "nonce", "type": "uint256" },
                { "internalType": "bytes", "name": "encodedEnvelope", "type": "bytes" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getTransactionState",
          "outputs": [
            {
              "internalType": "struct ICrossChainReceiver.TransactionStateWithoutAdapters",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "uint8", "name": "confirmations", "type": "uint8" },
                { "internalType": "uint120", "name": "firstBridgedAt", "type": "uint120" }
              ]
            }
          ]
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "transactionId", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function",
          "name": "getTransactionState",
          "outputs": [
            {
              "internalType": "struct ICrossChainReceiver.TransactionStateWithoutAdapters",
              "name": "",
              "type": "tuple",
              "components": [
                { "internalType": "uint8", "name": "confirmations", "type": "uint8" },
                { "internalType": "uint120", "name": "firstBridgedAt", "type": "uint120" }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "guardian",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" },
            { "internalType": "address", "name": "guardian", "type": "address" },
            {
              "internalType": "struct ICrossChainReceiver.ConfirmationInput[]",
              "name": "initialRequiredConfirmations",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint256", "name": "chainId", "type": "uint256" },
                { "internalType": "uint8", "name": "requiredConfirmations", "type": "uint8" }
              ]
            },
            {
              "internalType": "struct ICrossChainReceiver.ReceiverBridgeAdapterConfigInput[]",
              "name": "receiverBridgeAdaptersToAllow",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "bridgeAdapter", "type": "address" },
                { "internalType": "uint256[]", "name": "chainIds", "type": "uint256[]" }
              ]
            },
            {
              "internalType": "struct ICrossChainForwarder.ForwarderBridgeAdapterConfigInput[]",
              "name": "forwarderBridgeAdaptersToEnable",
              "type": "tuple[]",
              "components": [
                { "internalType": "address", "name": "currentChainBridgeAdapter", "type": "address" },
                { "internalType": "address", "name": "destinationBridgeAdapter", "type": "address" },
                { "internalType": "uint256", "name": "destinationChainId", "type": "uint256" }
              ]
            },
            { "internalType": "address[]", "name": "sendersToApprove", "type": "address[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "struct Envelope",
              "name": "envelope",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "nonce", "type": "uint256" },
                { "internalType": "address", "name": "origin", "type": "address" },
                { "internalType": "address", "name": "destination", "type": "address" },
                { "internalType": "uint256", "name": "originChainId", "type": "uint256" },
                { "internalType": "uint256", "name": "destinationChainId", "type": "uint256" },
                { "internalType": "bytes", "name": "message", "type": "bytes" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isEnvelopeRegistered",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "envelopeId", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isEnvelopeRegistered",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "bridgeAdapter", "type": "address" },
            { "internalType": "uint256", "name": "chainId", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isReceiverBridgeAdapterAllowed",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "address", "name": "sender", "type": "address" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isSenderApproved",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [{ "internalType": "bytes32", "name": "transactionId", "type": "bytes32" }],
          "stateMutability": "view",
          "type": "function",
          "name": "isTransactionForwarded",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "struct Transaction",
              "name": "transaction",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "nonce", "type": "uint256" },
                { "internalType": "bytes", "name": "encodedEnvelope", "type": "bytes" }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTransactionForwarded",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "transactionId", "type": "bytes32" },
            { "internalType": "address", "name": "bridgeAdapter", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isTransactionReceivedByAdapter",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "encodedTransaction", "type": "bytes" },
            { "internalType": "uint256", "name": "originChainId", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "receiveCrossChainMessage"
        },
        {
          "inputs": [{ "internalType": "address[]", "name": "senders", "type": "address[]" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeSenders"
        },
        { "inputs": [], "stateMutability": "nonpayable", "type": "function", "name": "renounceOwnership" },
        {
          "inputs": [
            {
              "internalType": "struct Envelope",
              "name": "envelope",
              "type": "tuple",
              "components": [
                { "internalType": "uint256", "name": "nonce", "type": "uint256" },
                { "internalType": "address", "name": "origin", "type": "address" },
                { "internalType": "address", "name": "destination", "type": "address" },
                { "internalType": "uint256", "name": "originChainId", "type": "uint256" },
                { "internalType": "uint256", "name": "destinationChainId", "type": "uint256" },
                { "internalType": "bytes", "name": "message", "type": "bytes" }
              ]
            },
            { "internalType": "uint256", "name": "gasLimit", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retryEnvelope",
          "outputs": [{ "internalType": "bytes32", "name": "", "type": "bytes32" }]
        },
        {
          "inputs": [
            { "internalType": "bytes", "name": "encodedTransaction", "type": "bytes" },
            { "internalType": "uint256", "name": "gasLimit", "type": "uint256" },
            { "internalType": "address[]", "name": "bridgeAdaptersToRetry", "type": "address[]" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "retryTransaction"
        },
        {
          "inputs": [{ "internalType": "address", "name": "newOwner", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "struct ICrossChainReceiver.ConfirmationInput[]",
              "name": "newConfirmations",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint256", "name": "chainId", "type": "uint256" },
                { "internalType": "uint8", "name": "requiredConfirmations", "type": "uint8" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateConfirmations"
        },
        {
          "inputs": [{ "internalType": "address", "name": "newGuardian", "type": "address" }],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateGuardian"
        },
        {
          "inputs": [
            {
              "internalType": "struct ICrossChainReceiver.ValidityTimestampInput[]",
              "name": "newValidityTimestamp",
              "type": "tuple[]",
              "components": [
                { "internalType": "uint256", "name": "chainId", "type": "uint256" },
                { "internalType": "uint120", "name": "validityTimestamp", "type": "uint120" }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateMessagesValidityTimestamp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "whoCanRescue",
          "outputs": [{ "internalType": "address", "name": "", "type": "address" }]
        },
        { "inputs": [], "stateMutability": "payable", "type": "receive" }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowReceiverBridgeAdapters((address,uint256[])[])": {
            "params": { "bridgeAdaptersInput": "array of objects with the new bridge adapters and supported chains" }
          },
          "approveSenders(address[])": { "params": { "senders": "list of addresses to approve" } },
          "deliverEnvelope((uint256,address,address,uint256,uint256,bytes))": {
            "details": "to deliver an envelope, it needs to have been previously confirmed and not delivered",
            "params": { "envelope": "the Envelope typed data" }
          },
          "disableBridgeAdapters((address,uint256[])[])": {
            "params": { "bridgeAdapters": "array of bridge adapter addresses to disable" }
          },
          "disallowReceiverBridgeAdapters((address,uint256[])[])": {
            "params": {
              "bridgeAdaptersInput": "array of objects with the bridge adapters and supported chains to disallow"
            }
          },
          "emergencyEtherTransfer(address,uint256)": {
            "params": { "amount": "of eth to rescue", "to": "address to send the eth" }
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "params": {
              "amount": "of tokens to rescue",
              "erc20Token": "address of the token to rescue",
              "to": "address to send the tokens"
            }
          },
          "enableBridgeAdapters((address,address,uint256)[])": {
            "params": { "bridgeAdapters": "array of new bridge adapter configurations" }
          },
          "forwardMessage(uint256,address,uint256,bytes)": {
            "params": {
              "destination": "address where the message is intended for",
              "destinationChainId": "id of the destination chain where the message needs to be bridged",
              "gasLimit": "gas cost on receiving side of the message",
              "message": "bytes that need to be bridged"
            },
            "returns": { "_0": "internal id of the envelope and transaction" }
          },
          "getConfigurationByChain(uint256)": {
            "params": { "chainId": "id of the chain to get the configuration from" },
            "returns": { "_0": "the specified chain configuration object" }
          },
          "getCurrentEnvelopeNonce()": { "returns": { "_0": "the current valid envelope nonce" } },
          "getCurrentTransactionNonce()": { "returns": { "_0": "the current valid transaction nonce" } },
          "getEnvelopeState((uint256,address,address,uint256,uint256,bytes))": {
            "params": { "envelope": "the Envelope type data" },
            "returns": { "_0": "the envelope current state, containing if it has been confirmed and delivered" }
          },
          "getEnvelopeState(bytes32)": {
            "params": { "envelopeId": "id of the envelope" },
            "returns": { "_0": "the envelope current state, containing if it has been confirmed and delivered" }
          },
          "getForwarderBridgeAdaptersByChain(uint256)": {
            "params": { "chainId": "id of the chain we want to get the adapters from" },
            "returns": { "_0": "an array of chain configurations where the bridge adapter can communicate" }
          },
          "getReceiverBridgeAdaptersByChain(uint256)": {
            "params": { "chainId": "id of the chain to get the allowed bridge adapter list" },
            "returns": { "_0": "the list of allowed bridge adapters" }
          },
          "getSupportedChains()": { "returns": { "_0": "list of supported chains" } },
          "getTransactionState((uint256,bytes))": {
            "params": { "transaction": "Transaction type data" },
            "returns": {
              "_0": "number of confirmations of internal message identified by internalId and the updated timestamp"
            }
          },
          "getTransactionState(bytes32)": {
            "params": { "transactionId": "the id of transaction" },
            "returns": {
              "_0": "number of confirmations of internal message identified by the transactionId and the updated timestamp"
            }
          },
          "guardian()": { "details": "get guardian address;" },
          "initialize(address,address,(uint256,uint8)[],(address,uint256[])[],(address,address,uint256)[],address[])": {
            "params": {
              "forwarderBridgeAdaptersToEnable": "array specifying for every bridgeAdapter, the destinations it can have",
              "guardian": "address of the guardian of the cross chain controller",
              "initialRequiredConfirmations": "number of confirmations the messages need to be accepted as valid",
              "owner": "address of the owner of the cross chain controller",
              "receiverBridgeAdaptersToAllow": "array of addresses of the bridge adapters that can receive messages",
              "sendersToApprove": "array of addresses to allow as forwarders"
            }
          },
          "isEnvelopeRegistered((uint256,address,address,uint256,uint256,bytes))": {
            "params": { "envelope": "the Envelope type data" },
            "returns": { "_0": "boolean indicating if the envelope has been registered" }
          },
          "isEnvelopeRegistered(bytes32)": {
            "params": { "envelopeId": "the hashed id of the envelope" },
            "returns": { "_0": "boolean indicating if the envelope has been registered" }
          },
          "isReceiverBridgeAdapterAllowed(address,uint256)": {
            "params": {
              "bridgeAdapter": "address of the bridge adapter to check",
              "chainId": "id of the chain to check"
            },
            "returns": { "_0": "boolean indicating if bridge adapter is allowed" }
          },
          "isSenderApproved(address)": {
            "params": { "sender": "address that we want to check if approved" },
            "returns": { "_0": "boolean indicating if the address has been approved as sender" }
          },
          "isTransactionForwarded((uint256,bytes))": {
            "params": { "transaction": "the Transaction type data" },
            "returns": { "_0": "flag indicating if a transaction has been forwarded" }
          },
          "isTransactionForwarded(bytes32)": {
            "params": { "transactionId": "hashed id of the transaction" },
            "returns": { "_0": "flag indicating if a transaction has been forwarded" }
          },
          "isTransactionReceivedByAdapter(bytes32,address)": {
            "params": {
              "bridgeAdapter": "address of the bridge adapter to check if it has bridged the message",
              "transactionId": "id of the transaction as stored internally"
            },
            "returns": { "_0": "boolean indicating if the message has been received" }
          },
          "owner()": { "details": "Returns the address of the current owner." },
          "receiveCrossChainMessage(bytes,uint256)": {
            "params": {
              "encodedTransaction": "bytes containing the bridged information",
              "originChainId": "id of the chain where the transaction originated"
            }
          },
          "removeSenders(address[])": { "params": { "senders": "list of addresses to remove" } },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "retryEnvelope((uint256,address,address,uint256,uint256,bytes),uint256)": {
            "details": "This method will send an existing Envelope using a new Transaction.This method should be used when the intention is to send the Envelope as if it was a new message. This way on the Receiver side it will start from 0 to count for the required confirmations. (usual use case would be for when an envelope has been invalidated on Receiver side, and needs to be retried as a new message)",
            "params": { "envelope": "the Envelope type data", "gasLimit": "gas cost on receiving side of the message" },
            "returns": { "_0": "the transaction id that has the retried envelope" }
          },
          "retryTransaction(bytes,uint256,address[])": {
            "details": "This method will send an existing Transaction with its Envelope to the specified adapters.Should be used when some of the bridges on the initial forwarding did not work (out of gas), and we want the Transaction with Envelope to still account for the required confirmations on the Receiver side",
            "params": {
              "bridgeAdaptersToRetry": "list of bridge adapters to be used for the transaction forwarding retry",
              "encodedTransaction": "the encoded Transaction data",
              "gasLimit": "limit of gas to spend on forwarding per bridge"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateConfirmations((uint256,uint8)[])": {
            "params": {
              "newConfirmations": "array of objects with the chainId and the new number of needed confirmations"
            }
          },
          "updateGuardian(address)": {
            "details": "method to update the guardian",
            "params": { "newGuardian": "the new guardian address" }
          },
          "updateMessagesValidityTimestamp((uint256,uint120)[])": {
            "params": {
              "newValidityTimestamp": "array of objects containing the chain and timestamp where all the previous unconfirmed messages must be invalidated."
            }
          },
          "whoCanRescue()": { "returns": { "_0": "the allowed address" } }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "allowReceiverBridgeAdapters((address,uint256[])[])": {
            "notice": "method to add bridge adapters to the allowed list"
          },
          "approveSenders(address[])": { "notice": "method to approve new sender addresses" },
          "deliverEnvelope((uint256,address,address,uint256,uint256,bytes))": {
            "notice": "method to deliver an envelope to its destination"
          },
          "disableBridgeAdapters((address,uint256[])[])": { "notice": "method to disable bridge adapters" },
          "disallowReceiverBridgeAdapters((address,uint256[])[])": {
            "notice": "method to remove bridge adapters from the allowed list"
          },
          "emergencyEtherTransfer(address,uint256)": {
            "notice": "method called to rescue ether sent erroneously to the contract. Only callable by owner"
          },
          "emergencyTokenTransfer(address,address,uint256)": {
            "notice": "method called to rescue tokens sent erroneously to the contract. Only callable by owner"
          },
          "enableBridgeAdapters((address,address,uint256)[])": { "notice": "method to enable bridge adapters" },
          "forwardMessage(uint256,address,uint256,bytes)": {
            "notice": "method called to initiate message forwarding to other networks."
          },
          "getConfigurationByChain(uint256)": { "notice": "method to get the current configuration of a chain" },
          "getCurrentEnvelopeNonce()": { "notice": "method to get the current valid envelope nonce" },
          "getCurrentTransactionNonce()": { "notice": "method to get the current valid transaction nonce" },
          "getEnvelopeState((uint256,address,address,uint256,uint256,bytes))": {
            "notice": "method to get the internal state of an envelope"
          },
          "getEnvelopeState(bytes32)": { "notice": "method to get the internal state of an envelope" },
          "getForwarderBridgeAdaptersByChain(uint256)": {
            "notice": "method to get all the forwarder bridge adapters of a chain"
          },
          "getReceiverBridgeAdaptersByChain(uint256)": {
            "notice": "method to get the current allowed receiver bridge adapters for a chain"
          },
          "getSupportedChains()": {
            "notice": "method to get the current supported chains (at least one allowed bridge adapter)"
          },
          "getTransactionState((uint256,bytes))": { "notice": "method to get the internal transaction information" },
          "getTransactionState(bytes32)": { "notice": "method to get the current state of a transaction" },
          "initialize(address,address,(uint256,uint8)[],(address,uint256[])[],(address,address,uint256)[],address[])": {
            "notice": "method called to initialize the proxy"
          },
          "isEnvelopeRegistered((uint256,address,address,uint256,uint256,bytes))": {
            "notice": "method to check if a envelope has been previously forwarded."
          },
          "isEnvelopeRegistered(bytes32)": { "notice": "method to check if a envelope has been previously forwarded." },
          "isReceiverBridgeAdapterAllowed(address,uint256)": {
            "notice": "method to get if a bridge adapter is allowed"
          },
          "isSenderApproved(address)": { "notice": "method to get if a sender is approved" },
          "isTransactionForwarded((uint256,bytes))": { "notice": "method to get if a transaction has been forwarded" },
          "isTransactionForwarded(bytes32)": { "notice": "method to get if a transaction has been forwarded" },
          "isTransactionReceivedByAdapter(bytes32,address)": {
            "notice": "method to get if transaction has been received by bridge adapter"
          },
          "receiveCrossChainMessage(bytes,uint256)": {
            "notice": "method that receives a bridged transaction and tries to deliver the contents to destination if possible"
          },
          "removeSenders(address[])": { "notice": "method to remove sender addresses" },
          "retryEnvelope((uint256,address,address,uint256,uint256,bytes),uint256)": {
            "notice": "method called to re forward a previously sent envelope."
          },
          "retryTransaction(bytes,uint256,address[])": {
            "notice": "method to retry forwarding an already forwarded transaction"
          },
          "updateConfirmations((uint256,uint8)[])": {
            "notice": "method to update the number of confirmations necessary for the messages to be accepted as valid"
          },
          "updateMessagesValidityTimestamp((uint256,uint120)[])": {
            "notice": "method to set a new timestamp from where the messages will be valid."
          },
          "whoCanRescue()": { "notice": "method that defines the address that is allowed to rescue tokens" }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@aave/core-v3/=lib/aave-address-book/lib/aave-v3-core/",
        "@aave/periphery-v3/=lib/aave-address-book/lib/aave-v3-periphery/",
        "@openzeppelin/=lib/openzeppelin-contracts/",
        "aave-address-book/=lib/aave-address-book/src/",
        "aave-v3-core/=lib/aave-address-book/lib/aave-v3-core/",
        "aave-v3-periphery/=lib/aave-address-book/lib/aave-v3-periphery/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "fx-portal/=lib/fx-portal/contracts/",
        "hyperlane-monorepo/=lib/hyperlane-monorepo/solidity/contracts/",
        "nitro-contracts/=lib/nitro-contracts/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts/contracts/",
        "solidity-utils/=lib/solidity-utils/src/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/contracts/CrossChainController.sol": "CrossChainController" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x9f4357008a8f7d8c8bf5d48902e789637538d8c016be5766610901b4bba81514",
        "urls": [
          "bzz-raw://20bf19b2b851f58a4c24543de80ae70b3e08621f9230eb335dc75e2d4f43f5df",
          "dweb:/ipfs/QmSYuH1AhvJkPK8hNvoPqtExBcgTB42pPRHgTHkS5c5zYW"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/access-control/OwnableWithGuardian.sol": {
        "keccak256": "0x097e97cbceb38880d74db6311ffbaf158aa9e0735ec51367c60853d6eb811ff1",
        "urls": [
          "bzz-raw://6f83b6aa842af14fe0a8bc1ec8f844d69bf490873d72cb324462ae5f59a9267b",
          "dweb:/ipfs/QmRYv2HhJdULNQt9aTCsKWQdEVmDyjLfj3qJS3xUd4FyPF"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/access-control/interfaces/IWithGuardian.sol": {
        "keccak256": "0x2fd8f1a5a9da521eda9d424c0764e9ceac7c3d1afa90ac9124249c5a3c7d9d1a",
        "urls": [
          "bzz-raw://75ac28fae9d3a5cf111c6abc70f8a410a89f852d0dd5835bd29f6e0d0e837bc5",
          "dweb:/ipfs/QmcU48h5Lxc74jLfVrdzFkjWdLRStiz1w5GmBBx58kJo6s"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/oz-common/Address.sol": {
        "keccak256": "0xe641fb89c32466792ed9877ec915c699acfe5c04c655cf9e67738093a40c962c",
        "urls": [
          "bzz-raw://597b0804825a4c6acbec4e466f30138a527da64a8dd3cc7ae69a68d046e8852e",
          "dweb:/ipfs/QmVvhwnnWvMkaYNcfyeihW1ajwDiGhVV6KcTNoPD9HCVym"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/oz-common/Context.sol": {
        "keccak256": "0x6912c0cdc79f627eaa1511695fa0c14389681720812e5548645774d784bc24df",
        "urls": [
          "bzz-raw://3f2ae1b63c4be0f695d721e28361b34fe22a2e7e05723ca466b3ad2dde73db6f",
          "dweb:/ipfs/Qman92tY6xcqnXZa59TJiJKtf4Hhe5hhJrdERiStBV8EiK"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/oz-common/Ownable.sol": {
        "keccak256": "0x5566fcff7455a22cde32daecec5c44c893dddee1472063f2dcd301e844eabd00",
        "urls": [
          "bzz-raw://306860d4e8ecf8cf5928dd757f0e8f8530f05791a0a133acfc9be91d8e75f24a",
          "dweb:/ipfs/QmeuzENUkcz5GFTsXJUsMj1NpjbHg8hNJPDBtWzLAnEjkm"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/oz-common/SafeERC20.sol": {
        "keccak256": "0x42c6ca0e62e6a0d93137f11377ef4888c19d3c503169692f36f32076887059b6",
        "urls": [
          "bzz-raw://1ac0120428aad94493baa9454143b7d0e0d1f063278abcad3ea24a1cadc84371",
          "dweb:/ipfs/QmepMxuDv7SthD9c2EyD4wzPNkchHrRmDKcUEMg8ueV6Fr"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/oz-common/interfaces/IERC20.sol": {
        "keccak256": "0x510a088112e38933c8eff10816a3f74a0ea2365dc0914384b9097cdb62d8db69",
        "urls": [
          "bzz-raw://a3f702a4bfbec4bb8604174d80de82d5960b8997cd5b832c6f9a1850593e4bd4",
          "dweb:/ipfs/QmfXs5ejLkLQKYAg2RSm2woaAhZya6oVPeDs7T5yrAWBhT"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/oz-common/interfaces/IERC20Permit.sol": {
        "keccak256": "0xf455056affbe27997d7cdfbb7ee3b8e7cdef3c2f6b71d97cc204cb1621440193",
        "urls": [
          "bzz-raw://0ce1d2a17f6d32246ec54ebf5e1fcfd72d48d606bb4c192a4e1051d08de2b20c",
          "dweb:/ipfs/QmZSPGWfJAzBudcsLQaMXwhQvg3X2Jya5NvxkSGy7ViCFa"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/transparent-proxy/Initializable.sol": {
        "keccak256": "0x13984ac6962308e94d92148e47eb4cd31c113b2a4798246714f2235ab9d9d7a9",
        "urls": [
          "bzz-raw://77edd0450d7c6bd07544bc4597845f2e7840ab19504d5286928f93a431e0e831",
          "dweb:/ipfs/Qmddubpa2kF6UEsuiWtCuLjEDjk6EPz1AzqqyabwqJ1jaS"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/utils/Rescuable.sol": {
        "keccak256": "0xf7b7704dda57414708709251229583c917874f89a439e998b3347ee9340a95f9",
        "urls": [
          "bzz-raw://59a79763e07df9fd1ead7eb7b474e5b42927065db1e63dfb012a715887667a27",
          "dweb:/ipfs/QmbZ7v236pDXPZVm4GnsgLp5sQM2ii83r2q41G1ywpThba"
        ],
        "license": "MIT"
      },
      "lib/solidity-utils/src/contracts/utils/interfaces/IRescuable.sol": {
        "keccak256": "0xb7339cccbe91b2b0d9bd9adf4be58605ee75032eead9e3213304c6ae5ba108c1",
        "urls": [
          "bzz-raw://09db6f6a18144eb4a47353163408cebd32499b2611972cc8ddffc257654780b1",
          "dweb:/ipfs/Qmb6A7wFipu6seiUG3n2LoeWo91Nrj9xsapJKqEXExe7MX"
        ],
        "license": "MIT"
      },
      "src/contracts/BaseCrossChainController.sol": {
        "keccak256": "0x800641fd2b769118df88683020ffc0907a13ebc2a2817ef565c064152d0f35d5",
        "urls": [
          "bzz-raw://2e86be71893e841b44f985f18af77071b7119587bfe09bb8aaf71d2f9a7edcac",
          "dweb:/ipfs/QmTFgyzGdzRXe4ZNQn2tN51NcACgSdWAF2VAF7pExmEkU7"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/CrossChainController.sol": {
        "keccak256": "0x3cf72ab0d7673cb4261965ab31a2b8ba9567bcce68e6f83283da94d36da8da76",
        "urls": [
          "bzz-raw://e2b8a78275e8200fcd2e434ad11d178ba816faabfc53eda845724aa002940d1c",
          "dweb:/ipfs/QmZ5FaZLnA92he1U95KFvEWdYKSu6SAEYnxQXJN1zMknsJ"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/CrossChainForwarder.sol": {
        "keccak256": "0xbef311a4d79ee901ccae60b8ed8f88dd1559f799895458a48a92e6a6d114a6c3",
        "urls": [
          "bzz-raw://3e237a8732716c69aaec8fd56d286ebe58a819c250b23ae7a693b1acd1350760",
          "dweb:/ipfs/QmPtPfhUNQoXwYaHhDX15JNcHesn1zERix6sfSVyEyjGGn"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/CrossChainReceiver.sol": {
        "keccak256": "0x9a3613b6a4e0c2bdf82c917c7d6f108320cd62ef33e3fef49c3ef87ae405c6b8",
        "urls": [
          "bzz-raw://94bb65cfcdd811affe0947f90148b0c20fc78211444ca14b07c6dec4ded8f58c",
          "dweb:/ipfs/QmVyn5oe8CYWS5dzUsk2BbXUoZ9ppx3w44vq9zp1bEKJ5C"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/adapters/IBaseAdapter.sol": {
        "keccak256": "0x97ef80b6aeebf7ced38ac3816fd57e5eabd58ae251d47f17b63d2981b1f92e8b",
        "urls": [
          "bzz-raw://57a009f5ed843cfa18508b9f36eeaa521f233563553c9d16e80eaba90f81369b",
          "dweb:/ipfs/QmaABhvQyMjF43qshQAH5hWrNqkWfYhYqHSYBmAgq6icug"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IBaseCrossChainController.sol": {
        "keccak256": "0x5d226f4f433e4b73650f8f1a749eac15f44c537d2561b44fb8b979221d2fa22b",
        "urls": [
          "bzz-raw://20ec37bc28bd5bb67940021014f169a90912b8c281f4220949ea9e6e940116c9",
          "dweb:/ipfs/QmXH9QBmoApfSYR82ZRVpu2JGekdE4116puXrJgkfLEdYe"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IBaseReceiverPortal.sol": {
        "keccak256": "0x636561bf24807679c5a877b7394308545dc028fe76932d15257098be5991959f",
        "urls": [
          "bzz-raw://2e5f47d74b026fc94aaeec2fd74adc081dca753881b8a84265a34a7462d31b7b",
          "dweb:/ipfs/QmVWnGLdJshoWJJwMZKNZS76auTNBTZgswvLUduUxCoja2"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/ICrossChainController.sol": {
        "keccak256": "0x3e7285b5e32f47a8c352d3583d8bd892f5e89dfd63f48a532f972fbdf238e954",
        "urls": [
          "bzz-raw://d42a2ded743fd9f5d614a0d85a5065b05e90b4c517b6935f2a1076f7bbf23a7f",
          "dweb:/ipfs/QmRhceFdsSYSjrpkMkWXxvGbxRduyLER5sBVBN8uiwHkwg"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/ICrossChainForwarder.sol": {
        "keccak256": "0x7c67c32148d66de52ca28ae18c115b10753772aacd6dd020280590f137cc2056",
        "urls": [
          "bzz-raw://4077ddc3e091ee38556a7c0797de9b1608f32765d9f62a07efea6505bbebfa7c",
          "dweb:/ipfs/Qmbns917YEfng8nqn8wu3KnKBy562K7uWK3kxfzRsPdY27"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/ICrossChainReceiver.sol": {
        "keccak256": "0xf55d606adfb99cf829845731241d6eff48ef3a36153290fb6daf7af2250e3ec5",
        "urls": [
          "bzz-raw://1331b21d98f083181beb5f1f9b817757760a4ef3d79665e118fb4036ca7c056a",
          "dweb:/ipfs/QmUXUZeess24rcSjXxo1geCu9BxG4X7ivEHGKhSy6bPbmW"
        ],
        "license": "MIT"
      },
      "src/contracts/libs/EncodingUtils.sol": {
        "keccak256": "0xe778561273ede6b3db73f2fb7b2b443cf0a733a209967af59db107406b68964a",
        "urls": [
          "bzz-raw://7361dd55dee3cf7bd053d7cd289e148c9451e98c8126672e6287f4e769ab8fba",
          "dweb:/ipfs/QmeH1cwptCar31XamSH2QHSeG4BrS86KNdAbnvk6VGFvLB"
        ],
        "license": "MIT"
      },
      "src/contracts/libs/Errors.sol": {
        "keccak256": "0x4a4502debe85d126eb37f8268d2d816636ae21c08b0dae7f26cb11d2bae0f80d",
        "urls": [
          "bzz-raw://ab72c20ea1e07f3bf567cddd96a0749b9a0afb0beefdc9a6f589657f4f97bc39",
          "dweb:/ipfs/QmXXu7CRbhhHqpjdvoBanTsf7wjD6N457ho3vE2dprSy2S"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 178
}
