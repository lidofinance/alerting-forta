services:

  service-forta-nats:
    container_name: forta-nats
    restart: unless-stopped
    image: nats:2.3.2
    ports:
      - 4222:4222
      - 6222:6222
      - 8222:8222
    networks:
      - forta-node

  service-forta-scanner:
    container_name: forta-scanner
    restart: unless-stopped
    image: forta-network/forta-node:latest
    command: /forta-node scanner
    environment:
      - FORTA_PASSPHRASE=MYPASSWORT123
    volumes:
      - .:/.forta
      - ./passphrase:/passphrase
      - ./docker-compose.yml:/.forta/wrapped-config.yml
    depends_on:
      - bot-1
    networks:
      - forta-node

  bot-1:
    container_name: bot-1-container
    restart: unless-stopped
    image: disco.forta.network/<FORTA_BOT_IMAGE_ID>
    volumes:
      - ./forta.config.json:/app/forta.config.json
    networks:
      - forta-node

#  forta-discord:
#    build:
#      context: ./forta-discord
#    restart: unless-stopped
#    networks:
#      - forta-node-mainnet
#    ports:
#      - "5001:5001"
#    volumes:
#      - ./forta-discord/forta-discord.yml:/etc/forta-discord.yml

networks:
  forta-node-mainnet: {}

x-forta-config:
  # Auto generated by 'forta init' - safe to modify
  # The chainId is the chainId of the network that is analyzed (1=mainnet)
  chainId: 1

  # The scan settings are used to retrieve the transactions that are analyzed
  scan:
    jsonRpc:
      url: <YOUR_RPC_URL>

  trace:
    enabled: false

  localMode:
    enable: True
    privateKeyHex: <ANY> (for example - 9e3c1e3ef3fc5669b6d469dafe2aa80b3986c5c59715ebcafb7e02076475a68c)
    logsToStdout: true
    webhookUrl: <WEBHOOK_URL_FOR_ALERTS>
    standalone:
      enable: true
      botContainers:
        - bot-1-container
